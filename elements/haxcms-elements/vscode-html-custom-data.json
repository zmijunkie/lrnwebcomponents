{
  "version": 1,
  "tags": [
    {
      "name": "haxcms-backend-beaker",
      "description": "`haxcms-backend-beaker`\n`a simple element to check for and fetch JWTs`\n\nEvents:\n\n  * `haxcms-trigger-update-node` {`CustomEvent<boolean>`} - \n\n  * `haxcms-trigger-update` {`CustomEvent<boolean>`} - \n\n  * `json-outline-schema-changed` {`CustomEvent<any>`} - \n\n  * `haxcms-not-logged-in` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\n  * `manifest` - Store manifest that makes up the site.\n\n  * `activeItem` - Track activeItem\n\nProperties:\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\n  * `manifest` - Store manifest that makes up the site.\n\n  * `activeItem` - Track activeItem\n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "jwt",
          "description": "`jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\nProperty: jwt"
        },
        {
          "name": "manifest",
          "description": "`manifest` - Store manifest that makes up the site.\n\nProperty: manifest"
        },
        {
          "name": "activeItem",
          "description": "`activeItem` - Track activeItem\n\nProperty: activeItem"
        },
        {
          "name": "onhaxcms-trigger-update-node",
          "description": "`haxcms-trigger-update-node` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onhaxcms-trigger-update",
          "description": "`haxcms-trigger-update` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onjson-outline-schema-changed",
          "description": "`json-outline-schema-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhaxcms-not-logged-in",
          "description": "`haxcms-not-logged-in` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "haxcms-backend-demo",
      "description": "`haxcms-backend-demo`\n`a simple element to check for and fetch JWTs`\n\nAttributes:\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\nProperties:\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "jwt",
          "description": "`jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\nProperty: jwt\n\nDefault: false"
        }
      ]
    },
    {
      "name": "haxcms-backend-nodejs",
      "description": "`haxcms-backend-nodejs`\n`a simple element to check for and fetch JWTs`\n\nEvents:\n\n  * `haxcms-not-logged-in` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\nProperties:\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "jwt",
          "description": "`jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\nProperty: jwt"
        },
        {
          "name": "onhaxcms-not-logged-in",
          "description": "`haxcms-not-logged-in` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "haxcms-backend-php",
      "description": "`haxcms-backend-php`\n`a simple element to check for and fetch JWTs`\n\nEvents:\n\n  * `haxcms-not-logged-in` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\nProperties:\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "jwt",
          "description": "`jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\nProperty: jwt"
        },
        {
          "name": "onhaxcms-not-logged-in",
          "description": "`haxcms-not-logged-in` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "haxcms-editor-builder",
      "description": "`haxcms-editor-builder`\nFigure out what our context is and setup based on that\n\nEvents:\n\n  * `haxcms-editor-builder-ready` {`CustomEvent<this>`} - ",
      "attributes": [
        {
          "name": "onhaxcms-editor-builder-ready",
          "description": "`haxcms-editor-builder-ready` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "haxcms-outline-editor-dialog",
      "description": "`haxcms-outline-editor-dialog`\n`Dialog for presenting an editable outline`\n\nEvents:\n\n  * `opened-changed` {`CustomEvent<any>`} - \n\n  * `manifest-edit-mode-changed` {`CustomEvent<any>`} - \n\n  * `haxcms-save-outline` {`CustomEvent<any>`} - \n\n  * `simple-modal-hide` {`CustomEvent<boolean>`} - \n\nAttributes:\n\n  * `opened` {`boolean`} - opened state of the dialog inside here\n\n  * `manifestItems` {`any[]`} - Outline of items in json outline schema format\n\n  * `manifest-items-static` {`string`} - Stringify'ed representation of items\n\n  * `view-label` {`string`} - Display label, switch when hitting the toggle button\n\n  * `view-mode` {`boolean`} - Which edit mode to display\n\nProperties:\n\n  * `opened` {`boolean`} - opened state of the dialog inside here\n\n  * `manifestItems` {`any[]`} - Outline of items in json outline schema format\n\n  * `manifestItemsStatic` {`string`} - Stringify'ed representation of items\n\n  * `viewLabel` {`string`} - Display label, switch when hitting the toggle button\n\n  * `__disposer` {`never[]`} - \n\n  * `viewMode` {`boolean`} - Which edit mode to display",
      "attributes": [
        {
          "name": "opened",
          "description": "`opened` {`boolean`} - opened state of the dialog inside here\n\nProperty: opened",
          "valueSet": "v"
        },
        {
          "name": "manifestItems",
          "description": "`manifestItems` {`any[]`} - Outline of items in json outline schema format\n\nProperty: manifestItems"
        },
        {
          "name": "manifest-items-static",
          "description": "`manifest-items-static` {`string`} - Stringify'ed representation of items\n\nProperty: manifestItemsStatic"
        },
        {
          "name": "view-label",
          "description": "`view-label` {`string`} - Display label, switch when hitting the toggle button\n\nProperty: viewLabel"
        },
        {
          "name": "view-mode",
          "description": "`view-mode` {`boolean`} - Which edit mode to display\n\nProperty: viewMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onopened-changed",
          "description": "`opened-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onmanifest-edit-mode-changed",
          "description": "`manifest-edit-mode-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhaxcms-save-outline",
          "description": "`haxcms-save-outline` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-modal-hide",
          "description": "`simple-modal-hide` {`CustomEvent<boolean>`} - "
        }
      ]
    },
    {
      "name": "haxcms-site-builder",
      "description": "`haxcms-site-builder`\n`build the site and everything off of this`\n\nEvents:\n\n  * `outline-location-changed` {`CustomEvent<any>`} - \n\n  * `manifest-changed` {`CustomEvent<any>`} - \n\n  * `active-item-changed` {`CustomEvent<any>`} - \n\n  * `active-item-content-changed` {`CustomEvent<any>`} - \n\n  * `simple-toast-show` {`CustomEvent<{ text: string; }>`} - \n\n  * `haxcms-ready` {`CustomEvent<this>`} - \n\n  * `resize` {`Event`} - \n\n  * `json-outline-schema-active-body-changed` {`CustomEvent<any>`} - \n\nAttributes:\n\n  * `_timeStamp` {`string`} - \n\n  * `dashboard-opened` {`boolean`} - \n\n  * `manifest` - Manifest from file\n\n  * `themeData` - Theme, used to boot a design element\n\n  * `themeName` {`string`} - Theme name, which we then use to setup the theme\n\n  * `activeItem` - Active item which is in JSON Outline Schema\n\n  * `activeItemContent` {`string`} - Active item content\n\n  * `file` {`string`} - Location of the site.json file\n\n  * `base-uri` {`string`} - Injected by HAXcms\n\n  * `queryParams` - queryParams\n\n  * `loading` {`boolean`} - Loading status of the page to render.\n\n  * `__imported` - Imported items so we can allow theme flipping dynamically\n\n  * `theme-loaded` {`boolean`} - theme loaded to indicate to the theme we have a theme ready to go\n\n  * `outline-location` {`string`} - support for alternate locations.\n\n  * `active-item-location` {`string`} - \n\n  * `t` - \n\nProperties:\n\n  * `_timeStamp` {`string`} - \n\n  * `dashboardOpened` {`boolean`} - \n\n  * `manifest` - Manifest from file\n\n  * `themeData` - Theme, used to boot a design element\n\n  * `themeName` {`string`} - Theme name, which we then use to setup the theme\n\n  * `activeItem` - Active item which is in JSON Outline Schema\n\n  * `activeItemContent` {`string`} - Active item content\n\n  * `file` {`string`} - Location of the site.json file\n\n  * `baseURI` {`string`} - Injected by HAXcms\n\n  * `__disposer` {`never[]`} - \n\n  * `queryParams` - queryParams\n\n  * `loading` {`boolean`} - Loading status of the page to render.\n\n  * `__imported` - Imported items so we can allow theme flipping dynamically\n\n  * `themeLoaded` {`boolean`} - theme loaded to indicate to the theme we have a theme ready to go\n\n  * `outlineLocation` {`string`} - support for alternate locations.\n\n  * `activeItemLocation` {`string`} - \n\n  * `t` - ",
      "attributes": [
        {
          "name": "_timeStamp",
          "description": "`_timeStamp` {`string`} - \n\nProperty: _timeStamp"
        },
        {
          "name": "dashboard-opened",
          "description": "`dashboard-opened` {`boolean`} - \n\nProperty: dashboardOpened",
          "valueSet": "v"
        },
        {
          "name": "manifest",
          "description": "`manifest` - Manifest from file\n\nProperty: manifest"
        },
        {
          "name": "themeData",
          "description": "`themeData` - Theme, used to boot a design element\n\nProperty: themeData"
        },
        {
          "name": "themeName",
          "description": "`themeName` {`string`} - Theme name, which we then use to setup the theme\n\nProperty: themeName"
        },
        {
          "name": "activeItem",
          "description": "`activeItem` - Active item which is in JSON Outline Schema\n\nProperty: activeItem"
        },
        {
          "name": "activeItemContent",
          "description": "`activeItemContent` {`string`} - Active item content\n\nProperty: activeItemContent"
        },
        {
          "name": "file",
          "description": "`file` {`string`} - Location of the site.json file\n\nProperty: file"
        },
        {
          "name": "base-uri",
          "description": "`base-uri` {`string`} - Injected by HAXcms\n\nProperty: baseURI"
        },
        {
          "name": "queryParams",
          "description": "`queryParams` - queryParams\n\nProperty: queryParams\n\nDefault: [object Object]"
        },
        {
          "name": "loading",
          "description": "`loading` {`boolean`} - Loading status of the page to render.\n\nProperty: loading\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "__imported",
          "description": "`__imported` - Imported items so we can allow theme flipping dynamically\n\nProperty: __imported\n\nDefault: [object Object]"
        },
        {
          "name": "theme-loaded",
          "description": "`theme-loaded` {`boolean`} - theme loaded to indicate to the theme we have a theme ready to go\n\nProperty: themeLoaded\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "outline-location",
          "description": "`outline-location` {`string`} - support for alternate locations.\n\nProperty: outlineLocation\n\nDefault: "
        },
        {
          "name": "active-item-location",
          "description": "`active-item-location` {`string`} - \n\nProperty: activeItemLocation\n\nDefault: "
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t"
        },
        {
          "name": "onoutline-location-changed",
          "description": "`outline-location-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onmanifest-changed",
          "description": "`manifest-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onactive-item-changed",
          "description": "`active-item-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onactive-item-content-changed",
          "description": "`active-item-content-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-toast-show",
          "description": "`simple-toast-show` {`CustomEvent<{ text: string; }>`} - "
        },
        {
          "name": "onhaxcms-ready",
          "description": "`haxcms-ready` {`CustomEvent<this>`} - "
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onjson-outline-schema-active-body-changed",
          "description": "`json-outline-schema-active-body-changed` {`CustomEvent<any>`} - "
        }
      ]
    },
    {
      "name": "haxcms-site-dashboard",
      "description": "`haxcms-site-dashboard`\n`Off screen dashboard for modifying internal settings to the site`\n\nEvents:\n\n  * `haxcms-save-site-data` {`CustomEvent<any>`} - \n\n  * `haxcms-load-site-dashboard` {`CustomEvent<any>`} - \n\nAttributes:\n\n  * `dashboard-opened` {`boolean`} - \n\n  * `method` {`string`} - Allow method to be overridden, useful in local testing\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\n  * `publishing` {`boolean`} - Publishing end point, this has CDN implications so show message\n\n  * `backText` {`string`} - \n\n  * `backLink` {`string`} - \n\n  * `manifest` - Outline of items in json outline schema format\n\nProperties:\n\n  * `dashboardOpened` {`boolean`} - \n\n  * `method` {`string`} - Allow method to be overridden, useful in local testing\n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\n  * `publishing` {`boolean`} - Publishing end point, this has CDN implications so show message\n\n  * `backText` {`string`} - \n\n  * `backLink` {`string`} - \n\n  * `manifest` - Outline of items in json outline schema format\n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "dashboard-opened",
          "description": "`dashboard-opened` {`boolean`} - \n\nProperty: dashboardOpened",
          "valueSet": "v"
        },
        {
          "name": "method",
          "description": "`method` {`string`} - Allow method to be overridden, useful in local testing\n\nProperty: method"
        },
        {
          "name": "jwt",
          "description": "`jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\nProperty: jwt"
        },
        {
          "name": "publishing",
          "description": "`publishing` {`boolean`} - Publishing end point, this has CDN implications so show message\n\nProperty: publishing",
          "valueSet": "v"
        },
        {
          "name": "backText",
          "description": "`backText` {`string`} - \n\nProperty: backText\n\nDefault: Back to site list"
        },
        {
          "name": "backLink",
          "description": "`backLink` {`string`} - \n\nProperty: backLink\n\nDefault: ../../"
        },
        {
          "name": "manifest",
          "description": "`manifest` - Outline of items in json outline schema format\n\nProperty: manifest\n\nDefault: [object Object]"
        },
        {
          "name": "onhaxcms-save-site-data",
          "description": "`haxcms-save-site-data` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhaxcms-load-site-dashboard",
          "description": "`haxcms-load-site-dashboard` {`CustomEvent<any>`} - "
        }
      ]
    },
    {
      "name": "haxcms-site-editor-ui",
      "description": "`haxcms-site-editor-ui`\n`haxcms editor element buttons that you see`\n\nEvents:\n\n  * `haxcms-load-user-data` {`CustomEvent<boolean>`} - \n\n  * `hax-add-voice-command` {`CustomEvent<{ command: string; context: any; callback: string; }>`} - \n\n  * `edit-mode-changed` {`CustomEvent<any>`} - \n\n  * `manifest-edit-mode-changed` {`CustomEvent<any>`} - \n\n  * `haxcms-save-node` {`CustomEvent<any>`} - \n\n  * `simple-modal-hide` {`CustomEvent<{}>`} - \n\n  * `haxcms-load-node-fields` {`CustomEvent<any>`} - \n\n  * `hax-cancel` {`CustomEvent<any>`} - \n\n  * `haxcms-create-node` {`CustomEvent<{ values: any; }>`} - \n\n  * `haxcms-save-node-details` {`CustomEvent<any>`} - \n\n  * `simple-modal-show` {`CustomEvent<{ title: string; styles: { \"--simple-modal-z-index\": string; \"--simple-modal-min-width\": string; \"--simple-modal-min-height\": string; }; elements: { content: HTMLSpanElement; buttons: HTMLSpanElement; }; invokedBy: any; clone: boolean; modal: boolean; }>`} - \n\n  * `haxcms-delete-node` {`CustomEvent<{ item: any; }>`} - \n\n  * `haxcms-load-site-dashboard` {`CustomEvent<any>`} - \n\n  * `haxcms-outline-edit-mode-changed` {`CustomEvent<any>`} - \n\n  * `haxcms-manifest-edit-mode-changed` {`CustomEvent<any>`} - \n\nAttributes:\n\n  * `user-name` {`string`} - \n\n  * `user-picture` {`string`} - \n\n  * `backLink` {`string`} - \n\n  * `__editText` {`string`} - \n\n  * `__settingsText` {`string`} - \n\n  * `active-title` {`string`} - \n\n  * `manifest` - \n\n  * `dashboard-opened` {`boolean`} - \n\n  * `backText` {`string`} - \n\n  * `painting` {`boolean`} - small visual lock that events break on initial paint\n\n  * `page-allowed` {`boolean`} - page allowed\n\n  * `edit-mode` {`boolean`} - if the page is in an edit state or not\n\n  * `__editIcon` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `manifest-edit-mode` {`boolean`} - Manifest editing state\n\n  * `t` - \n\nProperties:\n\n  * `userName` {`string`} - \n\n  * `userPicture` {`string`} - \n\n  * `backLink` {`string`} - \n\n  * `__editText` {`string`} - \n\n  * `__settingsText` {`string`} - \n\n  * `activeTitle` {`string`} - \n\n  * `manifest` - \n\n  * `dashboardOpened` {`boolean`} - \n\n  * `__disposer` - \n\n  * `backText` {`string`} - \n\n  * `painting` {`boolean`} - small visual lock that events break on initial paint\n\n  * `pageAllowed` {`boolean`} - page allowed\n\n  * `editMode` {`boolean`} - if the page is in an edit state or not\n\n  * `__editIcon` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `manifestEditMode` {`boolean`} - Manifest editing state\n\n  * `t` - ",
      "attributes": [
        {
          "name": "user-name",
          "description": "`user-name` {`string`} - \n\nProperty: userName"
        },
        {
          "name": "user-picture",
          "description": "`user-picture` {`string`} - \n\nProperty: userPicture"
        },
        {
          "name": "backLink",
          "description": "`backLink` {`string`} - \n\nProperty: backLink"
        },
        {
          "name": "__editText",
          "description": "`__editText` {`string`} - \n\nProperty: __editText"
        },
        {
          "name": "__settingsText",
          "description": "`__settingsText` {`string`} - \n\nProperty: __settingsText"
        },
        {
          "name": "active-title",
          "description": "`active-title` {`string`} - \n\nProperty: activeTitle"
        },
        {
          "name": "manifest",
          "description": "`manifest` - \n\nProperty: manifest"
        },
        {
          "name": "dashboard-opened",
          "description": "`dashboard-opened` {`boolean`} - \n\nProperty: dashboardOpened",
          "valueSet": "v"
        },
        {
          "name": "backText",
          "description": "`backText` {`string`} - \n\nProperty: backText\n\nDefault: Back to site list"
        },
        {
          "name": "painting",
          "description": "`painting` {`boolean`} - small visual lock that events break on initial paint\n\nProperty: painting\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "page-allowed",
          "description": "`page-allowed` {`boolean`} - page allowed\n\nProperty: pageAllowed\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - if the page is in an edit state or not\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "__editIcon",
          "description": "`__editIcon` {`string`} - \n\nProperty: __editIcon\n\nDefault: hax:page-edit"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: hax:site-settings"
        },
        {
          "name": "manifest-edit-mode",
          "description": "`manifest-edit-mode` {`boolean`} - Manifest editing state\n\nProperty: manifestEditMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "onhaxcms-load-user-data",
          "description": "`haxcms-load-user-data` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onhax-add-voice-command",
          "description": "`hax-add-voice-command` {`CustomEvent<{ command: string; context: any; callback: string; }>`} - "
        },
        {
          "name": "onedit-mode-changed",
          "description": "`edit-mode-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onmanifest-edit-mode-changed",
          "description": "`manifest-edit-mode-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhaxcms-save-node",
          "description": "`haxcms-save-node` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-modal-hide",
          "description": "`simple-modal-hide` {`CustomEvent<{}>`} - "
        },
        {
          "name": "onhaxcms-load-node-fields",
          "description": "`haxcms-load-node-fields` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhax-cancel",
          "description": "`hax-cancel` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhaxcms-create-node",
          "description": "`haxcms-create-node` {`CustomEvent<{ values: any; }>`} - "
        },
        {
          "name": "onhaxcms-save-node-details",
          "description": "`haxcms-save-node-details` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-modal-show",
          "description": "`simple-modal-show` {`CustomEvent<{ title: string; styles: { \"--simple-modal-z-index\": string; \"--simple-modal-min-width\": string; \"--simple-modal-min-height\": string; }; elements: { content: HTMLSpanElement; buttons: HTMLSpanElement; }; invokedBy: any; clone: boolean; modal: boolean; }>`} - "
        },
        {
          "name": "onhaxcms-delete-node",
          "description": "`haxcms-delete-node` {`CustomEvent<{ item: any; }>`} - "
        },
        {
          "name": "onhaxcms-load-site-dashboard",
          "description": "`haxcms-load-site-dashboard` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhaxcms-outline-edit-mode-changed",
          "description": "`haxcms-outline-edit-mode-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhaxcms-manifest-edit-mode-changed",
          "description": "`haxcms-manifest-edit-mode-changed` {`CustomEvent<any>`} - "
        }
      ]
    },
    {
      "name": "haxcms-site-editor",
      "description": "`haxcms-site-editor`\n`haxcms editor element that provides all editing capabilities`\n\nEvents:\n\n  * `simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - \n\n  * `jwt-login-logout` {`CustomEvent<{ redirect: boolean; }>`} - \n\n  * `jwt-login-refresh-token` {`CustomEvent<{ element: { obj: this; callback: string; params: any[]; }; }>`} - \n\n  * `haxcms-site-editor-loaded` {`CustomEvent<boolean>`} - \n\n  * `manifest-changed` {`CustomEvent<any>`} - \n\n  * `simple-modal-show` {`CustomEvent<{ title: string; styles: { \"--simple-modal-z-index\": string; \"--simple-modal-min-width\": string; \"--simple-modal-min-height\": string; }; elements: { content: HTMLElement; buttons: HTMLDivElement; }; invokedBy: any; clone: boolean; modal: boolean; }>`} - \n\n  * `haxcms-save-node-details` {`CustomEvent<any>`} - \n\n  * `simple-modal-hide` {`CustomEvent<{}>`} - \n\n  * `haxcms-save-site-data` {`CustomEvent<any>`} - \n\n  * `haxcms-trigger-update` {`CustomEvent<boolean>`} - \n\n  * `haxcms-create-node-success` {`CustomEvent<{ value: boolean; originalTarget: any; }>`} - \n\n  * `haxcms-trigger-update-node` {`CustomEvent<boolean>`} - \n\nAttributes:\n\n  * `get-user-data-path` {`string`} - \n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\n  * `save-node-path` {`string`} - end point for saving nodes\n\n  * `create-node-path` {`string`} - end point for create new nodes\n\n  * `delete-node-path` {`string`} - end point for delete nodes\n\n  * `save-manifest-path` {`string`} - end point for saving manifest\n\n  * `publish-site-path` {`string`} - end point for publishing\n\n  * `revert-site-path` {`string`} - end point for revert\n\n  * `appendTarget` - \n\n  * `appElement` - \n\n  * `sync-site-path` {`string`} - end point for sync\n\n  * `publishing` {`boolean`} - Publishing end point, this has CDN implications so show message\n\n  * `save-outline-path` {`string`} - end point for saving outline\n\n  * `appStore` - appStore object from backend\n\n  * `activeItem` - Active item of the node being worked on, JSON outline schema item format\n\n  * `manifest` - Outline of items in json outline schema format\n\n  * `get-node-fields-path` {`string`} - \n\n  * `save-site-fields-path` {`string`} - \n\n  * `get-form-token` {`string`} - \n\n  * `siteDashboard` - Site dashboard element reference\n\n  * `method` {`string`} - Allow method to be overridden, useful in local testing\n\n  * `edit-mode` {`boolean`} - if the node is in an edit state or not\n\nProperties:\n\n  * `getUserDataPath` {`string`} - \n\n  * `jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\n  * `saveNodePath` {`string`} - end point for saving nodes\n\n  * `createNodePath` {`string`} - end point for create new nodes\n\n  * `deleteNodePath` {`string`} - end point for delete nodes\n\n  * `saveManifestPath` {`string`} - end point for saving manifest\n\n  * `publishSitePath` {`string`} - end point for publishing\n\n  * `revertSitePath` {`string`} - end point for revert\n\n  * `appendTarget` - \n\n  * `appElement` - \n\n  * `syncSitePath` {`string`} - end point for sync\n\n  * `publishing` {`boolean`} - Publishing end point, this has CDN implications so show message\n\n  * `saveOutlinePath` {`string`} - end point for saving outline\n\n  * `appStore` - appStore object from backend\n\n  * `activeItem` - Active item of the node being worked on, JSON outline schema item format\n\n  * `manifest` - Outline of items in json outline schema format\n\n  * `getNodeFieldsPath` {`string`} - \n\n  * `getSiteFieldsPath` {`string`} - \n\n  * `getFormToken` {`string`} - \n\n  * `siteDashboard` - Site dashboard element reference\n\n  * `__disposer` {`never[]`} - \n\n  * `method` {`string`} - Allow method to be overridden, useful in local testing\n\n  * `editMode` {`boolean`} - if the node is in an edit state or not",
      "attributes": [
        {
          "name": "get-user-data-path",
          "description": "`get-user-data-path` {`string`} - \n\nProperty: getUserDataPath"
        },
        {
          "name": "jwt",
          "description": "`jwt` {`string`} - JSON Web token, it'll come from a global call if it's available\n\nProperty: jwt"
        },
        {
          "name": "save-node-path",
          "description": "`save-node-path` {`string`} - end point for saving nodes\n\nProperty: saveNodePath"
        },
        {
          "name": "create-node-path",
          "description": "`create-node-path` {`string`} - end point for create new nodes\n\nProperty: createNodePath"
        },
        {
          "name": "delete-node-path",
          "description": "`delete-node-path` {`string`} - end point for delete nodes\n\nProperty: deleteNodePath"
        },
        {
          "name": "save-manifest-path",
          "description": "`save-manifest-path` {`string`} - end point for saving manifest\n\nProperty: saveManifestPath"
        },
        {
          "name": "publish-site-path",
          "description": "`publish-site-path` {`string`} - end point for publishing\n\nProperty: publishSitePath"
        },
        {
          "name": "revert-site-path",
          "description": "`revert-site-path` {`string`} - end point for revert\n\nProperty: revertSitePath"
        },
        {
          "name": "appendTarget",
          "description": "`appendTarget` - \n\nProperty: appendTarget"
        },
        {
          "name": "appElement",
          "description": "`appElement` - \n\nProperty: appElement"
        },
        {
          "name": "sync-site-path",
          "description": "`sync-site-path` {`string`} - end point for sync\n\nProperty: syncSitePath"
        },
        {
          "name": "publishing",
          "description": "`publishing` {`boolean`} - Publishing end point, this has CDN implications so show message\n\nProperty: publishing",
          "valueSet": "v"
        },
        {
          "name": "save-outline-path",
          "description": "`save-outline-path` {`string`} - end point for saving outline\n\nProperty: saveOutlinePath"
        },
        {
          "name": "appStore",
          "description": "`appStore` - appStore object from backend\n\nProperty: appStore"
        },
        {
          "name": "activeItem",
          "description": "`activeItem` - Active item of the node being worked on, JSON outline schema item format\n\nProperty: activeItem"
        },
        {
          "name": "manifest",
          "description": "`manifest` - Outline of items in json outline schema format\n\nProperty: manifest"
        },
        {
          "name": "get-node-fields-path",
          "description": "`get-node-fields-path` {`string`} - \n\nProperty: getNodeFieldsPath"
        },
        {
          "name": "save-site-fields-path",
          "description": "`save-site-fields-path` {`string`} - \n\nProperty: getSiteFieldsPath"
        },
        {
          "name": "get-form-token",
          "description": "`get-form-token` {`string`} - \n\nProperty: getFormToken"
        },
        {
          "name": "siteDashboard",
          "description": "`siteDashboard` - Site dashboard element reference\n\nProperty: siteDashboard"
        },
        {
          "name": "method",
          "description": "`method` {`string`} - Allow method to be overridden, useful in local testing\n\nProperty: method\n\nDefault: POST"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - if the node is in an edit state or not\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onsimple-toast-show",
          "description": "`simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - "
        },
        {
          "name": "onjwt-login-logout",
          "description": "`jwt-login-logout` {`CustomEvent<{ redirect: boolean; }>`} - "
        },
        {
          "name": "onjwt-login-refresh-token",
          "description": "`jwt-login-refresh-token` {`CustomEvent<{ element: { obj: this; callback: string; params: any[]; }; }>`} - "
        },
        {
          "name": "onhaxcms-site-editor-loaded",
          "description": "`haxcms-site-editor-loaded` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onmanifest-changed",
          "description": "`manifest-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-modal-show",
          "description": "`simple-modal-show` {`CustomEvent<{ title: string; styles: { \"--simple-modal-z-index\": string; \"--simple-modal-min-width\": string; \"--simple-modal-min-height\": string; }; elements: { content: HTMLElement; buttons: HTMLDivElement; }; invokedBy: any; clone: boolean; modal: boolean; }>`} - "
        },
        {
          "name": "onhaxcms-save-node-details",
          "description": "`haxcms-save-node-details` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-modal-hide",
          "description": "`simple-modal-hide` {`CustomEvent<{}>`} - "
        },
        {
          "name": "onhaxcms-save-site-data",
          "description": "`haxcms-save-site-data` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhaxcms-trigger-update",
          "description": "`haxcms-trigger-update` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onhaxcms-create-node-success",
          "description": "`haxcms-create-node-success` {`CustomEvent<{ value: boolean; originalTarget: any; }>`} - "
        },
        {
          "name": "onhaxcms-trigger-update-node",
          "description": "`haxcms-trigger-update-node` {`CustomEvent<boolean>`} - "
        }
      ]
    },
    {
      "name": "haxcms-site-router",
      "description": "`haxcms-site-router`\n`front-end router for haxcms`\n\nProperties:\n\n  * `baseURI` {`string | null`} - \n\n  * `router` - \n\n  * `__disposer` - Subscribe to changes in the manifest",
      "attributes": []
    },
    {
      "name": "haxcms-site-store",
      "description": "HTMLElement\n\nEvents:\n\n  * `json-outline-schema-active-item-changed` {`CustomEvent<any>`} - \n\n  * `haxcms-edit-mode-changed` {`CustomEvent<boolean>`} - \n\nAttributes:\n\n  * `source` {`string | null`} - \n\nProperties:\n\n  * `storePieces` - \n\n  * `store` - \n\n  * `source` {`string | null`} - ",
      "attributes": [
        {
          "name": "source",
          "description": "`source` {`string | null`} - \n\nProperty: source\n\nDefault: ",
          "values": []
        },
        {
          "name": "onjson-outline-schema-active-item-changed",
          "description": "`json-outline-schema-active-item-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhaxcms-edit-mode-changed",
          "description": "`haxcms-edit-mode-changed` {`CustomEvent<boolean>`} - "
        }
      ]
    },
    {
      "name": "haxcms-button-add",
      "description": "Attributes:\n\n  * `type` {`string`} - \n\n  * `auto-edit` {`boolean`} - \n\n  * `icon` {`string`} - \n\n  * `label` {`string`} - \n\n  * `voiceCommand` {`string`} - \n\n  * `dark` {`boolean`} - \n\n  * `edit-mode` {`boolean`} - \n\n  * `t` - \n\nProperties:\n\n  * `type` {`string`} - \n\n  * `autoEdit` {`boolean`} - \n\n  * `icon` {`string`} - \n\n  * `label` {`string`} - \n\n  * `voiceCommand` {`string`} - \n\n  * `dark` {`boolean`} - \n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` - \n\n  * `t` - ",
      "attributes": [
        {
          "name": "type",
          "description": "`type` {`string`} - \n\nProperty: type\n\nDefault: sibling"
        },
        {
          "name": "auto-edit",
          "description": "`auto-edit` {`boolean`} - \n\nProperty: autoEdit\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: hax:add-page"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label\n\nDefault: button"
        },
        {
          "name": "voiceCommand",
          "description": "`voiceCommand` {`string`} - \n\nProperty: voiceCommand\n\nDefault: add page"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - \n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t"
        }
      ]
    },
    {
      "name": "haxcms-site-listing",
      "description": "`haxcms-site-listing`\n`A listing of all sites being managed by this instance.`\n\nEvents:\n\n  * `jwt-login-logout` {`CustomEvent<{}>`} - \n\n  * `simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - \n\n  * `simple-login-camera-icon-click` {`CustomEvent<this>`} - \n\n  * `simple-login-cancel-icon-click` {`CustomEvent<this>`} - \n\n  * `jwt-login-login` {`CustomEvent<any>`} - \n\n  * `sites-listing-refresh-data` {`CustomEvent<boolean>`} - \n\n  * `resize` {`Event`} - \n\n  * `jwt-login-refresh-token` {`CustomEvent<{ element: { obj: this; callback: string; params: any[]; }; }>`} - \n\nAttributes:\n\n  * `__loading` {`boolean`} - \n\n  * `sites-response` - Object, JSON Outline Schema format\n\n  * `method` {`string`} - \n\n  * `title` {`string`} - Title\n\n  * `sites` {`any[]`} - \n\n  * `base-path` {`string`} - Base path of where this is located.\n\n  * `hide-login` {`boolean`} - If we should hide the login button all the time or not\n\n  * `hide-global-settings` {`boolean`} - If we should hide the login button all the time or not\n\n  * `data-source` {`string`} - Data Source to power the loading of sites in JSON Outline Schema format.\n\n  * `jwt` {`string`} - JSON Web token\n\n  * `user-data` - \n\n  * `create-params` - Request params for creating a new site\n\n  * `download-params` - \n\n  * `delete-params` - \n\n  * `clone-params` - \n\n  * `publish-params` - \n\n  * `sync-params` - \n\n  * `archive-params` - \n\n  * `config-params` - \n\n  * `set-config-params` - \n\n  * `get-user-data-params` - \n\n  * `active-opertion` {`string`} - \n\n  * `selected-items` {`any[]`} - \n\n  * `active-item` - Active item that's being reviewed / has bubbled up.\n\n  * `logged-in` {`boolean`} - Logged in state\n\n  * `edit-mode` {`boolean`} - Edit mode\n\n  * `hide-camera` {`boolean`} - \n\n  * `logout-photo` {`string`} - \n\n  * `-hax-schematizer` - \n\n  * `-hax-elementizer` - \n\nProperties:\n\n  * `__loading` {`boolean`} - \n\n  * `sitesResponse` - Object, JSON Outline Schema format\n\n  * `method` {`string`} - \n\n  * `title` {`string`} - Title\n\n  * `sites` {`any[]`} - \n\n  * `basePath` {`string`} - Base path of where this is located.\n\n  * `hideLogin` {`boolean`} - If we should hide the login button all the time or not\n\n  * `hideGlobalSettings` {`boolean`} - If we should hide the login button all the time or not\n\n  * `dataSource` {`string`} - Data Source to power the loading of sites in JSON Outline Schema format.\n\n  * `jwt` {`string`} - JSON Web token\n\n  * `userData` - \n\n  * `createParams` - Request params for creating a new site\n\n  * `downloadParams` - \n\n  * `deleteParams` - \n\n  * `cloneParams` - \n\n  * `publishParams` - \n\n  * `syncParams` - \n\n  * `archiveParams` - \n\n  * `configParams` - \n\n  * `setConfigParams` - \n\n  * `getUserDataParams` - \n\n  * `activeOpertion` {`string`} - \n\n  * `selectedItems` {`any[]`} - \n\n  * `activeItem` - Active item that's being reviewed / has bubbled up.\n\n  * `loggedIn` {`boolean`} - Logged in state\n\n  * `editMode` {`boolean`} - Edit mode\n\n  * `hideCamera` {`boolean`} - \n\n  * `logoutPhoto` {`string`} - \n\n  * `SimpleColors` - \n\n  * `HaxSchematizer` - \n\n  * `HaxElementizer` - \n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `_overrideLegacyUndefined` {`boolean`} - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "__loading",
          "description": "`__loading` {`boolean`} - \n\nProperty: __loading",
          "valueSet": "v"
        },
        {
          "name": "sites-response",
          "description": "`sites-response` - Object, JSON Outline Schema format\n\nProperty: sitesResponse"
        },
        {
          "name": "method",
          "description": "`method` {`string`} - \n\nProperty: method\n\nDefault: POST"
        },
        {
          "name": "title",
          "description": "`title` {`string`} - Title\n\nProperty: title\n\nDefault: My sites"
        },
        {
          "name": "sites",
          "description": "`sites` {`any[]`} - \n\nProperty: sites"
        },
        {
          "name": "base-path",
          "description": "`base-path` {`string`} - Base path of where this is located.\n\nProperty: basePath"
        },
        {
          "name": "hide-login",
          "description": "`hide-login` {`boolean`} - If we should hide the login button all the time or not\n\nProperty: hideLogin\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-global-settings",
          "description": "`hide-global-settings` {`boolean`} - If we should hide the login button all the time or not\n\nProperty: hideGlobalSettings\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "data-source",
          "description": "`data-source` {`string`} - Data Source to power the loading of sites in JSON Outline Schema format.\n\nProperty: dataSource"
        },
        {
          "name": "jwt",
          "description": "`jwt` {`string`} - JSON Web token\n\nProperty: jwt"
        },
        {
          "name": "user-data",
          "description": "`user-data` - \n\nProperty: userData\n\nDefault: [object Object]"
        },
        {
          "name": "create-params",
          "description": "`create-params` - Request params for creating a new site\n\nProperty: createParams\n\nDefault: [object Object]"
        },
        {
          "name": "download-params",
          "description": "`download-params` - \n\nProperty: downloadParams\n\nDefault: [object Object]"
        },
        {
          "name": "delete-params",
          "description": "`delete-params` - \n\nProperty: deleteParams\n\nDefault: [object Object]"
        },
        {
          "name": "clone-params",
          "description": "`clone-params` - \n\nProperty: cloneParams\n\nDefault: [object Object]"
        },
        {
          "name": "publish-params",
          "description": "`publish-params` - \n\nProperty: publishParams\n\nDefault: [object Object]"
        },
        {
          "name": "sync-params",
          "description": "`sync-params` - \n\nProperty: syncParams\n\nDefault: [object Object]"
        },
        {
          "name": "archive-params",
          "description": "`archive-params` - \n\nProperty: archiveParams\n\nDefault: [object Object]"
        },
        {
          "name": "config-params",
          "description": "`config-params` - \n\nProperty: configParams\n\nDefault: [object Object]"
        },
        {
          "name": "set-config-params",
          "description": "`set-config-params` - \n\nProperty: setConfigParams\n\nDefault: [object Object]"
        },
        {
          "name": "get-user-data-params",
          "description": "`get-user-data-params` - \n\nProperty: getUserDataParams\n\nDefault: [object Object]"
        },
        {
          "name": "active-opertion",
          "description": "`active-opertion` {`string`} - \n\nProperty: activeOpertion"
        },
        {
          "name": "selected-items",
          "description": "`selected-items` {`any[]`} - \n\nProperty: selectedItems\n\nDefault: "
        },
        {
          "name": "active-item",
          "description": "`active-item` - Active item that's being reviewed / has bubbled up.\n\nProperty: activeItem"
        },
        {
          "name": "logged-in",
          "description": "`logged-in` {`boolean`} - Logged in state\n\nProperty: loggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - Edit mode\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-camera",
          "description": "`hide-camera` {`boolean`} - \n\nProperty: hideCamera\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "logout-photo",
          "description": "`logout-photo` {`string`} - \n\nProperty: logoutPhoto\n\nDefault: false"
        },
        {
          "name": "-hax-schematizer",
          "description": "`-hax-schematizer` - \n\nProperty: HaxSchematizer\n\nDefault: [object Object]"
        },
        {
          "name": "-hax-elementizer",
          "description": "`-hax-elementizer` - \n\nProperty: HaxElementizer\n\nDefault: [object Object]"
        },
        {
          "name": "onjwt-login-logout",
          "description": "`jwt-login-logout` {`CustomEvent<{}>`} - "
        },
        {
          "name": "onsimple-toast-show",
          "description": "`simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - "
        },
        {
          "name": "onsimple-login-camera-icon-click",
          "description": "`simple-login-camera-icon-click` {`CustomEvent<this>`} - "
        },
        {
          "name": "onsimple-login-cancel-icon-click",
          "description": "`simple-login-cancel-icon-click` {`CustomEvent<this>`} - "
        },
        {
          "name": "onjwt-login-login",
          "description": "`jwt-login-login` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsites-listing-refresh-data",
          "description": "`sites-listing-refresh-data` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onjwt-login-refresh-token",
          "description": "`jwt-login-refresh-token` {`CustomEvent<{ element: { obj: this; callback: string; params: any[]; }; }>`} - "
        }
      ]
    },
    {
      "name": "haxcms-basic-theme",
      "description": "`haxcms-basic-theme`\n`An incredibly basic theme. Great starting point for new site discussions.\n\nEvents:\n\n  * `resize` {`Event`} - \n\n  * `popstate` {`PopStateEvent`} - \n\n  * `haxcms-active-item-changed` {`CustomEvent<{}>`} - \n\nAttributes:\n\n  * `hex-color` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `edit-mode` {`boolean`} - editting state for the page\n\n  * `is-logged-in` {`boolean`} - editting state for the page\n\n  * `content-container` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\nProperties:\n\n  * `hexColor` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `editMode` {`boolean`} - editting state for the page\n\n  * `isLoggedIn` {`boolean`} - editting state for the page\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `HAXCMSThemeSettings` - \n\n  * `__disposer` - \n\n  * `HAXCMSThemeWiring` - \n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `_overrideLegacyUndefined` {`boolean`} - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "hex-color",
          "description": "`hex-color` {`string`} - Class for the color\n\nProperty: hexColor"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - editting state for the page\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "is-logged-in",
          "description": "`is-logged-in` {`boolean`} - editting state for the page\n\nProperty: isLoggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "content-container",
          "description": "`content-container` - DOM node that wraps the slot\n\nProperty: contentContainer"
        },
        {
          "name": "_location",
          "description": "`_location` - location as object\n\nProperty: _location"
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onpopstate",
          "description": "`popstate` {`PopStateEvent`} - "
        },
        {
          "name": "onhaxcms-active-item-changed",
          "description": "`haxcms-active-item-changed` {`CustomEvent<{}>`} - "
        }
      ]
    },
    {
      "name": "haxcms-blank-theme",
      "description": "Events:\n\n  * `haxcms-save-node` {`CustomEvent<any>`} - \n\n  * `simple-modal-hide` {`CustomEvent<{}>`} - \n\n  * `haxcms-load-node-fields` {`CustomEvent<any>`} - \n\n  * `hax-cancel` {`CustomEvent<any>`} - \n\n  * `simple-toast-hide` {`CustomEvent<boolean>`} - \n\n  * `simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - \n\n  * `content-container-changed` {`CustomEvent<any>`} - \n\n  * `is-logged-in-changed` {`CustomEvent<any>`} - \n\n  * `edit-mode-changed` {`CustomEvent<any>`} - \n\n  * `resize` {`Event`} - \n\n  * `popstate` {`PopStateEvent`} - \n\n  * `haxcms-active-item-changed` {`CustomEvent<{}>`} - \n\n  * `responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - \n\n  * `responsive-element-deleted` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `prevPage` {`string`} - \n\n  * `nextPage` {`string`} - \n\n  * `pageTimestamp` {`number`} - \n\n  * `searchTerm` {`string`} - \n\n  * `showQRCode` {`boolean`} - \n\n  * `menu-open` {`boolean`} - \n\n  * `t` - \n\n  * `hex-color` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `edit-mode` {`boolean`} - editting state for the page\n\n  * `is-logged-in` {`boolean`} - editting state for the page\n\n  * `responsive-width` {`number`} - width in pixels\n\n  * `responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disable-responsive` {`boolean`} - \n\nProperties:\n\n  * `prevPage` {`string`} - \n\n  * `nextPage` {`string`} - \n\n  * `pageTimestamp` {`number`} - \n\n  * `searchTerm` {`string`} - \n\n  * `__evaluateRoute` {`boolean`} - \n\n  * `showQRCode` {`boolean`} - \n\n  * `menuOpen` {`boolean`} - \n\n  * `t` - \n\n  * `hexColor` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `editMode` {`boolean`} - editting state for the page\n\n  * `isLoggedIn` {`boolean`} - editting state for the page\n\n  * `HAXCMSThemeSettings` - \n\n  * `__disposer` - \n\n  * `HAXCMSThemeWiring` - \n\n  * `responsiveWidth` {`number`} - width in pixels\n\n  * `responsiveSize` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disableResponsive` {`boolean`} - ",
      "attributes": [
        {
          "name": "prevPage",
          "description": "`prevPage` {`string`} - \n\nProperty: prevPage"
        },
        {
          "name": "nextPage",
          "description": "`nextPage` {`string`} - \n\nProperty: nextPage"
        },
        {
          "name": "pageTimestamp",
          "description": "`pageTimestamp` {`number`} - \n\nProperty: pageTimestamp"
        },
        {
          "name": "searchTerm",
          "description": "`searchTerm` {`string`} - \n\nProperty: searchTerm\n\nDefault: "
        },
        {
          "name": "showQRCode",
          "description": "`showQRCode` {`boolean`} - \n\nProperty: showQRCode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "menu-open",
          "description": "`menu-open` {`boolean`} - \n\nProperty: menuOpen\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "hex-color",
          "description": "`hex-color` {`string`} - Class for the color\n\nProperty: hexColor"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "contentContainer",
          "description": "`contentContainer` - DOM node that wraps the slot\n\nProperty: contentContainer"
        },
        {
          "name": "_location",
          "description": "`_location` - location as object\n\nProperty: _location"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - editting state for the page\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "is-logged-in",
          "description": "`is-logged-in` {`boolean`} - editting state for the page\n\nProperty: isLoggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "responsive-width",
          "description": "`responsive-width` {`number`} - width in pixels\n\nProperty: responsiveWidth"
        },
        {
          "name": "responsive-size",
          "description": "`responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\nProperty: responsiveSize\n\nDefault: xs"
        },
        {
          "name": "sm",
          "description": "`sm` {`number`} - Miniumum value for small breakpoint\n\nProperty: sm\n\nDefault: 600"
        },
        {
          "name": "md",
          "description": "`md` {`number`} - Miniumum value for medium breakpoint\n\nProperty: md\n\nDefault: 900"
        },
        {
          "name": "lg",
          "description": "`lg` {`number`} - Miniumum value for large breakpoint\n\nProperty: lg\n\nDefault: 1200"
        },
        {
          "name": "xl",
          "description": "`xl` {`number`} - Miniumum value for extra-large breakpoint\n\nProperty: xl\n\nDefault: 1500"
        },
        {
          "name": "disable-responsive",
          "description": "`disable-responsive` {`boolean`} - \n\nProperty: disableResponsive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onhaxcms-save-node",
          "description": "`haxcms-save-node` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-modal-hide",
          "description": "`simple-modal-hide` {`CustomEvent<{}>`} - "
        },
        {
          "name": "onhaxcms-load-node-fields",
          "description": "`haxcms-load-node-fields` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhax-cancel",
          "description": "`hax-cancel` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-toast-hide",
          "description": "`simple-toast-hide` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onsimple-toast-show",
          "description": "`simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - "
        },
        {
          "name": "oncontent-container-changed",
          "description": "`content-container-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onis-logged-in-changed",
          "description": "`is-logged-in-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onedit-mode-changed",
          "description": "`edit-mode-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onpopstate",
          "description": "`popstate` {`PopStateEvent`} - "
        },
        {
          "name": "onhaxcms-active-item-changed",
          "description": "`haxcms-active-item-changed` {`CustomEvent<{}>`} - "
        },
        {
          "name": "onresponsive-element",
          "description": "`responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - "
        },
        {
          "name": "onresponsive-element-deleted",
          "description": "`responsive-element-deleted` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "haxcms-minimalist-theme",
      "description": "`haxcms-minimalist-theme`\n`Minimalist design, just a whole page really.\n\nEvents:\n\n  * `resize` {`Event`} - \n\n  * `popstate` {`PopStateEvent`} - \n\n  * `haxcms-active-item-changed` {`CustomEvent<{}>`} - \n\nAttributes:\n\n  * `hex-color` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `edit-mode` {`boolean`} - editting state for the page\n\n  * `is-logged-in` {`boolean`} - editting state for the page\n\n  * `content-container` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\nProperties:\n\n  * `hexColor` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `editMode` {`boolean`} - editting state for the page\n\n  * `isLoggedIn` {`boolean`} - editting state for the page\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `HAXCMSThemeSettings` - \n\n  * `__disposer` - \n\n  * `HAXCMSThemeWiring` - \n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `_overrideLegacyUndefined` {`boolean`} - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "hex-color",
          "description": "`hex-color` {`string`} - Class for the color\n\nProperty: hexColor"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - editting state for the page\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "is-logged-in",
          "description": "`is-logged-in` {`boolean`} - editting state for the page\n\nProperty: isLoggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "content-container",
          "description": "`content-container` - DOM node that wraps the slot\n\nProperty: contentContainer"
        },
        {
          "name": "_location",
          "description": "`_location` - location as object\n\nProperty: _location"
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onpopstate",
          "description": "`popstate` {`PopStateEvent`} - "
        },
        {
          "name": "onhaxcms-active-item-changed",
          "description": "`haxcms-active-item-changed` {`CustomEvent<{}>`} - "
        }
      ]
    },
    {
      "name": "haxcms-print-theme",
      "description": "Events:\n\n  * `haxcms-save-node` {`CustomEvent<any>`} - \n\n  * `simple-modal-hide` {`CustomEvent<{}>`} - \n\n  * `haxcms-load-node-fields` {`CustomEvent<any>`} - \n\n  * `hax-cancel` {`CustomEvent<any>`} - \n\n  * `simple-toast-hide` {`CustomEvent<boolean>`} - \n\n  * `simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - \n\n  * `content-container-changed` {`CustomEvent<any>`} - \n\n  * `is-logged-in-changed` {`CustomEvent<any>`} - \n\n  * `edit-mode-changed` {`CustomEvent<any>`} - \n\n  * `resize` {`Event`} - \n\n  * `popstate` {`PopStateEvent`} - \n\n  * `haxcms-active-item-changed` {`CustomEvent<{}>`} - \n\n  * `responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - \n\n  * `responsive-element-deleted` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `prevPage` {`string`} - \n\n  * `nextPage` {`string`} - \n\n  * `pageTimestamp` {`number`} - \n\n  * `searchTerm` {`string`} - \n\n  * `showQRCode` {`boolean`} - \n\n  * `menu-open` {`boolean`} - \n\n  * `t` - \n\n  * `hex-color` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `edit-mode` {`boolean`} - editting state for the page\n\n  * `is-logged-in` {`boolean`} - editting state for the page\n\n  * `responsive-width` {`number`} - width in pixels\n\n  * `responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disable-responsive` {`boolean`} - \n\nProperties:\n\n  * `prevPage` {`string`} - \n\n  * `nextPage` {`string`} - \n\n  * `pageTimestamp` {`number`} - \n\n  * `searchTerm` {`string`} - \n\n  * `__evaluateRoute` {`boolean`} - \n\n  * `showQRCode` {`boolean`} - \n\n  * `menuOpen` {`boolean`} - \n\n  * `t` - \n\n  * `hexColor` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `editMode` {`boolean`} - editting state for the page\n\n  * `isLoggedIn` {`boolean`} - editting state for the page\n\n  * `HAXCMSThemeSettings` - \n\n  * `__disposer` - \n\n  * `HAXCMSThemeWiring` - \n\n  * `responsiveWidth` {`number`} - width in pixels\n\n  * `responsiveSize` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disableResponsive` {`boolean`} - ",
      "attributes": [
        {
          "name": "prevPage",
          "description": "`prevPage` {`string`} - \n\nProperty: prevPage"
        },
        {
          "name": "nextPage",
          "description": "`nextPage` {`string`} - \n\nProperty: nextPage"
        },
        {
          "name": "pageTimestamp",
          "description": "`pageTimestamp` {`number`} - \n\nProperty: pageTimestamp"
        },
        {
          "name": "searchTerm",
          "description": "`searchTerm` {`string`} - \n\nProperty: searchTerm\n\nDefault: "
        },
        {
          "name": "showQRCode",
          "description": "`showQRCode` {`boolean`} - \n\nProperty: showQRCode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "menu-open",
          "description": "`menu-open` {`boolean`} - \n\nProperty: menuOpen\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "hex-color",
          "description": "`hex-color` {`string`} - Class for the color\n\nProperty: hexColor"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "contentContainer",
          "description": "`contentContainer` - DOM node that wraps the slot\n\nProperty: contentContainer"
        },
        {
          "name": "_location",
          "description": "`_location` - location as object\n\nProperty: _location"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - editting state for the page\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "is-logged-in",
          "description": "`is-logged-in` {`boolean`} - editting state for the page\n\nProperty: isLoggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "responsive-width",
          "description": "`responsive-width` {`number`} - width in pixels\n\nProperty: responsiveWidth"
        },
        {
          "name": "responsive-size",
          "description": "`responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\nProperty: responsiveSize\n\nDefault: xs"
        },
        {
          "name": "sm",
          "description": "`sm` {`number`} - Miniumum value for small breakpoint\n\nProperty: sm\n\nDefault: 600"
        },
        {
          "name": "md",
          "description": "`md` {`number`} - Miniumum value for medium breakpoint\n\nProperty: md\n\nDefault: 900"
        },
        {
          "name": "lg",
          "description": "`lg` {`number`} - Miniumum value for large breakpoint\n\nProperty: lg\n\nDefault: 1200"
        },
        {
          "name": "xl",
          "description": "`xl` {`number`} - Miniumum value for extra-large breakpoint\n\nProperty: xl\n\nDefault: 1500"
        },
        {
          "name": "disable-responsive",
          "description": "`disable-responsive` {`boolean`} - \n\nProperty: disableResponsive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onhaxcms-save-node",
          "description": "`haxcms-save-node` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-modal-hide",
          "description": "`simple-modal-hide` {`CustomEvent<{}>`} - "
        },
        {
          "name": "onhaxcms-load-node-fields",
          "description": "`haxcms-load-node-fields` {`CustomEvent<any>`} - "
        },
        {
          "name": "onhax-cancel",
          "description": "`hax-cancel` {`CustomEvent<any>`} - "
        },
        {
          "name": "onsimple-toast-hide",
          "description": "`simple-toast-hide` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onsimple-toast-show",
          "description": "`simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - "
        },
        {
          "name": "oncontent-container-changed",
          "description": "`content-container-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onis-logged-in-changed",
          "description": "`is-logged-in-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onedit-mode-changed",
          "description": "`edit-mode-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onpopstate",
          "description": "`popstate` {`PopStateEvent`} - "
        },
        {
          "name": "onhaxcms-active-item-changed",
          "description": "`haxcms-active-item-changed` {`CustomEvent<{}>`} - "
        },
        {
          "name": "onresponsive-element",
          "description": "`responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - "
        },
        {
          "name": "onresponsive-element-deleted",
          "description": "`responsive-element-deleted` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "haxcms-slide-theme",
      "description": "`haxcms-slide-theme`\n`A simple slide playing theme`\n\nEvents:\n\n  * `simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - \n\n  * `content-container-changed` {`CustomEvent<any>`} - \n\n  * `is-logged-in-changed` {`CustomEvent<any>`} - \n\n  * `edit-mode-changed` {`CustomEvent<any>`} - \n\n  * `resize` {`Event`} - \n\n  * `popstate` {`PopStateEvent`} - \n\n  * `haxcms-active-item-changed` {`CustomEvent<{}>`} - \n\n  * `responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - \n\n  * `responsive-element-deleted` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `manifestLength` {`number`} - \n\n  * `activeManifestIndexCounter` {`number`} - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `hex-color` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `edit-mode` {`boolean`} - editting state for the page\n\n  * `is-logged-in` {`boolean`} - editting state for the page\n\n  * `responsive-width` {`number`} - width in pixels\n\n  * `responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disable-responsive` {`boolean`} - \n\nProperties:\n\n  * `manifestLength` {`number`} - \n\n  * `activeManifestIndexCounter` {`number`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - \n\n  * `hexColor` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `editMode` {`boolean`} - editting state for the page\n\n  * `isLoggedIn` {`boolean`} - editting state for the page\n\n  * `HAXCMSThemeSettings` - \n\n  * `__disposer` {`never[]`} - \n\n  * `HAXCMSThemeWiring` - \n\n  * `responsiveWidth` {`number`} - width in pixels\n\n  * `responsiveSize` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disableResponsive` {`boolean`} - ",
      "attributes": [
        {
          "name": "manifestLength",
          "description": "`manifestLength` {`number`} - \n\nProperty: manifestLength"
        },
        {
          "name": "activeManifestIndexCounter",
          "description": "`activeManifestIndexCounter` {`number`} - \n\nProperty: activeManifestIndexCounter"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hex-color",
          "description": "`hex-color` {`string`} - Class for the color\n\nProperty: hexColor"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "contentContainer",
          "description": "`contentContainer` - DOM node that wraps the slot\n\nProperty: contentContainer"
        },
        {
          "name": "_location",
          "description": "`_location` - location as object\n\nProperty: _location"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - editting state for the page\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "is-logged-in",
          "description": "`is-logged-in` {`boolean`} - editting state for the page\n\nProperty: isLoggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "responsive-width",
          "description": "`responsive-width` {`number`} - width in pixels\n\nProperty: responsiveWidth"
        },
        {
          "name": "responsive-size",
          "description": "`responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\nProperty: responsiveSize\n\nDefault: xs"
        },
        {
          "name": "sm",
          "description": "`sm` {`number`} - Miniumum value for small breakpoint\n\nProperty: sm\n\nDefault: 600"
        },
        {
          "name": "md",
          "description": "`md` {`number`} - Miniumum value for medium breakpoint\n\nProperty: md\n\nDefault: 900"
        },
        {
          "name": "lg",
          "description": "`lg` {`number`} - Miniumum value for large breakpoint\n\nProperty: lg\n\nDefault: 1200"
        },
        {
          "name": "xl",
          "description": "`xl` {`number`} - Miniumum value for extra-large breakpoint\n\nProperty: xl\n\nDefault: 1500"
        },
        {
          "name": "disable-responsive",
          "description": "`disable-responsive` {`boolean`} - \n\nProperty: disableResponsive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onsimple-toast-show",
          "description": "`simple-toast-show` {`CustomEvent<{ text: string; duration: number; }>`} - "
        },
        {
          "name": "oncontent-container-changed",
          "description": "`content-container-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onis-logged-in-changed",
          "description": "`is-logged-in-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onedit-mode-changed",
          "description": "`edit-mode-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onpopstate",
          "description": "`popstate` {`PopStateEvent`} - "
        },
        {
          "name": "onhaxcms-active-item-changed",
          "description": "`haxcms-active-item-changed` {`CustomEvent<{}>`} - "
        },
        {
          "name": "onresponsive-element",
          "description": "`responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - "
        },
        {
          "name": "onresponsive-element-deleted",
          "description": "`responsive-element-deleted` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "haxcms-user-theme",
      "description": "`haxcms-custom-theme`\n`This is a custom theme. Don't edit this file, edit yoursite/theme/theme.css and yoursite/theme/theme.html`\n\nEvents:\n\n  * `haxcms-custom-theme-template-ready` {`CustomEvent<{ css: string; }>`} - \n\n  * `resize` {`Event`} - \n\n  * `popstate` {`PopStateEvent`} - \n\n  * `haxcms-active-item-changed` {`CustomEvent<{}>`} - \n\nAttributes:\n\n  * `hex-color` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `edit-mode` {`boolean`} - editting state for the page\n\n  * `is-logged-in` {`boolean`} - editting state for the page\n\n  * `content-container` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\nProperties:\n\n  * `__counter` {`number`} - \n\n  * `hexColor` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `editMode` {`boolean`} - editting state for the page\n\n  * `isLoggedIn` {`boolean`} - editting state for the page\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `HAXCMSThemeSettings` - \n\n  * `__disposer` - \n\n  * `HAXCMSThemeWiring` - \n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `_overrideLegacyUndefined` {`boolean`} - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "hex-color",
          "description": "`hex-color` {`string`} - Class for the color\n\nProperty: hexColor"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - editting state for the page\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "is-logged-in",
          "description": "`is-logged-in` {`boolean`} - editting state for the page\n\nProperty: isLoggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "content-container",
          "description": "`content-container` - DOM node that wraps the slot\n\nProperty: contentContainer"
        },
        {
          "name": "_location",
          "description": "`_location` - location as object\n\nProperty: _location"
        },
        {
          "name": "onhaxcms-custom-theme-template-ready",
          "description": "`haxcms-custom-theme-template-ready` {`CustomEvent<{ css: string; }>`} - "
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onpopstate",
          "description": "`popstate` {`PopStateEvent`} - "
        },
        {
          "name": "onhaxcms-active-item-changed",
          "description": "`haxcms-active-item-changed` {`CustomEvent<{}>`} - "
        }
      ]
    },
    {
      "name": "haxcms-dev-theme",
      "description": "`haxcms-dev-theme`\n`A theme intended as the starting point to fork from and build new themes for HAXCMS\n  which allows you to build things that just work using JSON Outline Schema as it's \"backend\"\nand then IF hax is around it'll show up :)`\n\nEvents:\n\n  * `resize` {`Event`} - \n\n  * `popstate` {`PopStateEvent`} - \n\n  * `haxcms-active-item-changed` {`CustomEvent<{}>`} - \n\nAttributes:\n\n  * `hex-color` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `edit-mode` {`boolean`} - editting state for the page\n\n  * `is-logged-in` {`boolean`} - editting state for the page\n\n  * `content-container` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\nProperties:\n\n  * `hexColor` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `editMode` {`boolean`} - editting state for the page\n\n  * `isLoggedIn` {`boolean`} - editting state for the page\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `HAXCMSThemeSettings` - \n\n  * `__disposer` - \n\n  * `HAXCMSThemeWiring` - \n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `_overrideLegacyUndefined` {`boolean`} - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "hex-color",
          "description": "`hex-color` {`string`} - Class for the color\n\nProperty: hexColor"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - editting state for the page\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "is-logged-in",
          "description": "`is-logged-in` {`boolean`} - editting state for the page\n\nProperty: isLoggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "content-container",
          "description": "`content-container` - DOM node that wraps the slot\n\nProperty: contentContainer"
        },
        {
          "name": "_location",
          "description": "`_location` - location as object\n\nProperty: _location"
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onpopstate",
          "description": "`popstate` {`PopStateEvent`} - "
        },
        {
          "name": "onhaxcms-active-item-changed",
          "description": "`haxcms-active-item-changed` {`CustomEvent<{}>`} - "
        }
      ]
    },
    {
      "name": "haxcms-theme-developer",
      "description": "`haxcms-dev-theme`\n`This is a theme used to make new themes (wwaaaaaaa?)\n\nEvents:\n\n  * `resize` {`Event`} - \n\n  * `popstate` {`PopStateEvent`} - \n\n  * `haxcms-active-item-changed` {`CustomEvent<{}>`} - \n\nAttributes:\n\n  * `hex-color` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `edit-mode` {`boolean`} - editting state for the page\n\n  * `is-logged-in` {`boolean`} - editting state for the page\n\n  * `content-container` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\nProperties:\n\n  * `HAXWiring` - \n\n  * `hexColor` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `editMode` {`boolean`} - editting state for the page\n\n  * `isLoggedIn` {`boolean`} - editting state for the page\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `HAXCMSThemeSettings` - \n\n  * `__disposer` - \n\n  * `HAXCMSThemeWiring` - \n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `_overrideLegacyUndefined` {`boolean`} - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "hex-color",
          "description": "`hex-color` {`string`} - Class for the color\n\nProperty: hexColor"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - editting state for the page\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "is-logged-in",
          "description": "`is-logged-in` {`boolean`} - editting state for the page\n\nProperty: isLoggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "content-container",
          "description": "`content-container` - DOM node that wraps the slot\n\nProperty: contentContainer"
        },
        {
          "name": "_location",
          "description": "`_location` - location as object\n\nProperty: _location"
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onpopstate",
          "description": "`popstate` {`PopStateEvent`} - "
        },
        {
          "name": "onhaxcms-active-item-changed",
          "description": "`haxcms-active-item-changed` {`CustomEvent<{}>`} - "
        }
      ]
    },
    {
      "name": "site-active-fields",
      "description": "`site-active-fields`\n`Title of the active page in the site`\n\nEvents:\n\n  * `fields-changed` {`CustomEvent<any>`} - \n\nAttributes:\n\n  * `fields` - \n\nProperties:\n\n  * `fields` - ",
      "attributes": [
        {
          "name": "fields",
          "description": "`fields` - \n\nProperty: fields"
        },
        {
          "name": "onfields-changed",
          "description": "`fields-changed` {`CustomEvent<any>`} - "
        }
      ]
    },
    {
      "name": "site-active-title",
      "description": "`site-active-title`\n`Title of the active page in the site`\n\nAttributes:\n\n  * `edit-mode` {`boolean`} - \n\n  * `dynamicMethodology` {`string`} - \n\n  * `__title` {`string`} - \n\nProperties:\n\n  * `editMode` {`boolean`} - \n\n  * `noFallback` {`boolean`} - \n\n  * `dynamicMethodology` {`string`} - \n\n  * `__title` {`string`} - \n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        },
        {
          "name": "dynamicMethodology",
          "description": "`dynamicMethodology` {`string`} - \n\nProperty: dynamicMethodology\n\nDefault: active"
        },
        {
          "name": "__title",
          "description": "`__title` {`string`} - \n\nProperty: __title\n\nDefault: "
        }
      ]
    },
    {
      "name": "site-git-corner",
      "description": "Attributes:\n\n  * `size` {`string`} - \n\n  * `circle` {`boolean`} - \n\n  * `direction` {`string`} - \n\n  * `active-git-file-link` {`string`} - \n\n  * `t` - \n\n  * `edit-mode` {`boolean`} - \n\nProperties:\n\n  * `size` {`string`} - \n\n  * `circle` {`boolean`} - \n\n  * `direction` {`string`} - \n\n  * `activeGitFileLink` {`string`} - \n\n  * `t` - \n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "size",
          "description": "`size` {`string`} - \n\nProperty: size"
        },
        {
          "name": "circle",
          "description": "`circle` {`boolean`} - \n\nProperty: circle\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "direction",
          "description": "`direction` {`string`} - \n\nProperty: direction\n\nDefault: right"
        },
        {
          "name": "active-git-file-link",
          "description": "`active-git-file-link` {`string`} - \n\nProperty: activeGitFileLink\n\nDefault: "
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "site-share-widget",
      "description": "Attributes:\n\n  * `activeItem` - \n\n  * `show` {`boolean`} - \n\n  * `alt` {`string`} - \n\n  * `icon` {`string`} - \n\nProperties:\n\n  * `activeItem` - \n\n  * `show` {`boolean`} - \n\n  * `alt` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `activeGitFileLink` {`string`} - \n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "activeItem",
          "description": "`activeItem` - \n\nProperty: activeItem"
        },
        {
          "name": "show",
          "description": "`show` {`boolean`} - \n\nProperty: show",
          "valueSet": "v"
        },
        {
          "name": "alt",
          "description": "`alt` {`string`} - \n\nProperty: alt\n\nDefault: Share page"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: social:share"
        }
      ]
    },
    {
      "name": "site-children-block",
      "description": "`site-children-block`\n`Child pages of whatever is active`\n\nAttributes:\n\n  * `parent` {`string`} - parent for the menu id\n\n  * `active-id` {`string`} - acitvely selected item\n\n  * `edit-mode` {`boolean`} - \n\n  * `dynamic-methodology` {`string`} - How we should obtain the parent who's children we should show\noptions are direct, above, or root\n\n  * `start` {`number`} - starting level for the menu items\n\n  * `end` {`number`} - ending level for the menu items\n\n  * `fixed-id` {`boolean`} - Use this boolean to force this to fix to 1 parent\nOtherwise it will dynamically update (default behavior)\n\n  * `noink` {`boolean`} - to control ink on the buttons\n\n  * `__items` {`any[]`} - just to bind data between things\n\nProperties:\n\n  * `parent` {`string`} - parent for the menu id\n\n  * `activeId` {`string`} - acitvely selected item\n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` {`never[]`} - \n\n  * `dynamicMethodology` {`string`} - How we should obtain the parent who's children we should show\noptions are direct, above, or root\n\n  * `start` {`number`} - starting level for the menu items\n\n  * `end` {`number`} - ending level for the menu items\n\n  * `fixedId` {`boolean`} - Use this boolean to force this to fix to 1 parent\nOtherwise it will dynamically update (default behavior)\n\n  * `noink` {`boolean`} - to control ink on the buttons\n\n  * `__items` {`any[]`} - just to bind data between things",
      "attributes": [
        {
          "name": "parent",
          "description": "`parent` {`string`} - parent for the menu id\n\nProperty: parent"
        },
        {
          "name": "active-id",
          "description": "`active-id` {`string`} - acitvely selected item\n\nProperty: activeId"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        },
        {
          "name": "dynamic-methodology",
          "description": "`dynamic-methodology` {`string`} - How we should obtain the parent who's children we should show\noptions are direct, above, or root\n\nProperty: dynamicMethodology\n\nDefault: active"
        },
        {
          "name": "start",
          "description": "`start` {`number`} - starting level for the menu items\n\nProperty: start\n\nDefault: 1"
        },
        {
          "name": "end",
          "description": "`end` {`number`} - ending level for the menu items\n\nProperty: end\n\nDefault: 1000"
        },
        {
          "name": "fixed-id",
          "description": "`fixed-id` {`boolean`} - Use this boolean to force this to fix to 1 parent\nOtherwise it will dynamically update (default behavior)\n\nProperty: fixedId\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "noink",
          "description": "`noink` {`boolean`} - to control ink on the buttons\n\nProperty: noink\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "__items",
          "description": "`__items` {`any[]`} - just to bind data between things\n\nProperty: __items\n\nDefault: "
        }
      ]
    },
    {
      "name": "site-outline-block",
      "description": "`site-outline-block`\n`Menu on top of the site typically a bar of options`\n\nAttributes:\n\n  * `manifest` - manifest of everything, in case we need to check on children of parents\n\n  * `active-id` {`string`} - acitvely selected item\n\n  * `sticky` {`boolean`} - visually stick to top of interface at all times\n\n  * `indicator` {`string`} - visualize the indicator as a a line, arrow, or not at all\n\n  * `noink` {`boolean`} - ink on the buttons\n\n  * `notitle` {`boolean`} - hide title on the buttons\n\n  * `showindex` {`boolean`} - ink on the buttons\n\n  * `arrow-size` {`number`} - Stupid but faster then calculating on the fly for sure\n\nProperties:\n\n  * `manifest` - manifest of everything, in case we need to check on children of parents\n\n  * `activeId` {`string`} - acitvely selected item\n\n  * `sticky` {`boolean`} - visually stick to top of interface at all times\n\n  * `indicator` {`string`} - visualize the indicator as a a line, arrow, or not at all\n\n  * `noink` {`boolean`} - ink on the buttons\n\n  * `notitle` {`boolean`} - hide title on the buttons\n\n  * `showindex` {`boolean`} - ink on the buttons\n\n  * `arrowSize` {`number`} - Stupid but faster then calculating on the fly for sure\n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `_overrideLegacyUndefined` {`boolean`} - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "manifest",
          "description": "`manifest` - manifest of everything, in case we need to check on children of parents\n\nProperty: manifest"
        },
        {
          "name": "active-id",
          "description": "`active-id` {`string`} - acitvely selected item\n\nProperty: activeId"
        },
        {
          "name": "sticky",
          "description": "`sticky` {`boolean`} - visually stick to top of interface at all times\n\nProperty: sticky\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "indicator",
          "description": "`indicator` {`string`} - visualize the indicator as a a line, arrow, or not at all\n\nProperty: indicator\n\nDefault: line"
        },
        {
          "name": "noink",
          "description": "`noink` {`boolean`} - ink on the buttons\n\nProperty: noink\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "notitle",
          "description": "`notitle` {`boolean`} - hide title on the buttons\n\nProperty: notitle\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "showindex",
          "description": "`showindex` {`boolean`} - ink on the buttons\n\nProperty: showindex\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "arrow-size",
          "description": "`arrow-size` {`number`} - Stupid but faster then calculating on the fly for sure\n\nProperty: arrowSize\n\nDefault: 6"
        }
      ]
    },
    {
      "name": "site-recent-content-block",
      "description": "`site-recent-content-block`\n`Block to display recent content`\n\nAttributes:\n\n  * `limit` {`number`} - starting level for the menu items\n\n  * `start-index` {`number`} - ending level for the menu items\n\n  * `sort` - optional sort\n\n  * `conditions` - conditions to query on\n\n  * `title` {`string`} - title for the block;\n\n  * `active-id` {`string`} - acitvely selected item\n\nProperties:\n\n  * `limit` {`number`} - starting level for the menu items\n\n  * `startIndex` {`number`} - ending level for the menu items\n\n  * `sort` - optional sort\n\n  * `conditions` - conditions to query on\n\n  * `title` {`string`} - title for the block;\n\n  * `activeId` {`string`} - acitvely selected item\n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `_overrideLegacyUndefined` {`boolean`} - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "limit",
          "description": "`limit` {`number`} - starting level for the menu items\n\nProperty: limit\n\nDefault: 10"
        },
        {
          "name": "start-index",
          "description": "`start-index` {`number`} - ending level for the menu items\n\nProperty: startIndex\n\nDefault: 0"
        },
        {
          "name": "sort",
          "description": "`sort` - optional sort\n\nProperty: sort\n\nDefault: [object Object]"
        },
        {
          "name": "conditions",
          "description": "`conditions` - conditions to query on\n\nProperty: conditions\n\nDefault: [object Object]"
        },
        {
          "name": "title",
          "description": "`title` {`string`} - title for the block;\n\nProperty: title\n\nDefault: Recent content"
        },
        {
          "name": "active-id",
          "description": "`active-id` {`string`} - acitvely selected item\n\nProperty: activeId"
        }
      ]
    },
    {
      "name": "site-drawer",
      "description": "`site-drawer`\n`Basic off canvas drawer element`\n\nAttributes:\n\n  * `align` {`string`} - \n\n  * `icon` {`string`} - \n\nProperties:\n\n  * `align` {`string`} - \n\n  * `icon` {`string`} - ",
      "attributes": [
        {
          "name": "align",
          "description": "`align` {`string`} - \n\nProperty: align\n\nDefault: right"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: menu"
        }
      ]
    },
    {
      "name": "site-footer",
      "description": "`site-footer`\n`A basic site footer`\n\nAttributes:\n\n  * `site-title` {`string`} - \n\n  * `manifest` - \n\n  * `edit-mode` {`boolean`} - \n\nProperties:\n\n  * `siteTitle` {`string`} - \n\n  * `manifest` - \n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "site-title",
          "description": "`site-title` {`string`} - \n\nProperty: siteTitle"
        },
        {
          "name": "manifest",
          "description": "`manifest` - \n\nProperty: manifest"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "site-modal",
      "description": "`site-modal`\n`A basic site dialog`\n\nEvents:\n\n  * `site-modal-click` {`CustomEvent<{ value: boolean; }>`} - \n\nAttributes:\n\n  * `dark` {`boolean`} - \n\n  * `accent-color` {`string`} - \n\n  * `title` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `button-label` {`string`} - \n\n  * `position` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `edit-mode` {`boolean`} - \n\nProperties:\n\n  * `dark` {`boolean`} - \n\n  * `accentColor` {`string`} - \n\n  * `title` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `buttonLabel` {`string`} - \n\n  * `position` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` - ",
      "attributes": [
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - \n\nProperty: dark",
          "valueSet": "v"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - \n\nProperty: accentColor"
        },
        {
          "name": "title",
          "description": "`title` {`string`} - \n\nProperty: title\n\nDefault: Dialog"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: icons:menu"
        },
        {
          "name": "button-label",
          "description": "`button-label` {`string`} - \n\nProperty: buttonLabel\n\nDefault: Open dialog"
        },
        {
          "name": "position",
          "description": "`position` {`string`} - \n\nProperty: position\n\nDefault: bottom"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        },
        {
          "name": "onsite-modal-click",
          "description": "`site-modal-click` {`CustomEvent<{ value: boolean; }>`} - "
        }
      ]
    },
    {
      "name": "active-when-visible",
      "description": "`active-when-visible`\n`Title of the site`\n\nEvents:\n\n  * `is-visible-changed` {`CustomEvent<any>`} - \n\nAttributes:\n\n  * `item-id` {`string`} - \n\n  * `_a` {`string`} - \n\n  * `thresholds` {`any[]`} - \n\n  * `root-margin` {`string`} - \n\n  * `visible-limit` {`number`} - \n\n  * `is-visible` {`boolean`} - \n\nProperties:\n\n  * `itemId` {`string`} - \n\n  * `_a` {`string`} - \n\n  * `thresholds` {`any[]`} - \n\n  * `rootMargin` {`string`} - \n\n  * `visibleLimit` {`number`} - \n\n  * `isVisible` {`boolean`} - ",
      "attributes": [
        {
          "name": "item-id",
          "description": "`item-id` {`string`} - \n\nProperty: itemId"
        },
        {
          "name": "_a",
          "description": "`_a` {`string`} - \n\nProperty: _a"
        },
        {
          "name": "thresholds",
          "description": "`thresholds` {`any[]`} - \n\nProperty: thresholds\n\nDefault: 0,0.25,0.5,0.75,1"
        },
        {
          "name": "root-margin",
          "description": "`root-margin` {`string`} - \n\nProperty: rootMargin\n\nDefault: 0px"
        },
        {
          "name": "visible-limit",
          "description": "`visible-limit` {`number`} - \n\nProperty: visibleLimit\n\nDefault: 0.5"
        },
        {
          "name": "is-visible",
          "description": "`is-visible` {`boolean`} - \n\nProperty: isVisible\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onis-visible-changed",
          "description": "`is-visible-changed` {`CustomEvent<any>`} - "
        }
      ]
    },
    {
      "name": "site-breadcrumb",
      "description": "`site-breadcrumb`\n`A basic breadcrumb of links based on the active state in HAXcms on JSON Outline Schema`\n\nProperties:\n\n  * `__disposer` {`never[]`} - ",
      "attributes": []
    },
    {
      "name": "site-dot-indicator",
      "description": "`site-dot-indicator`\n`list of items based on manifest`\n\nAttributes:\n\n  * `active-id` {`string`} - \n\n  * `routerManifest` - \n\n  * `sticky` {`string`} - \n\n  * `scroll-on-active` {`boolean`} - \n\nProperties:\n\n  * `activeId` {`string`} - \n\n  * `routerManifest` - \n\n  * `sticky` {`string`} - \n\n  * `__disposer` {`never[]`} - \n\n  * `scrollOnActive` {`boolean`} - ",
      "attributes": [
        {
          "name": "active-id",
          "description": "`active-id` {`string`} - \n\nProperty: activeId"
        },
        {
          "name": "routerManifest",
          "description": "`routerManifest` - \n\nProperty: routerManifest"
        },
        {
          "name": "sticky",
          "description": "`sticky` {`string`} - \n\nProperty: sticky"
        },
        {
          "name": "scroll-on-active",
          "description": "`scroll-on-active` {`boolean`} - \n\nProperty: scrollOnActive\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "site-menu-button",
      "description": "`site-menu-button`\n`Menu button based on the hierarchy`\n\nAttributes:\n\n  * `type` {`string`} - \n\n  * `activeRouterManifestIndex` {`string`} - acitvely selected item\n\n  * `routerManifest` - \n\n  * `link` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `label` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `position` {`string`} - \n\n  * `raised` {`boolean`} - \n\n  * `hide-label` {`boolean`} - \n\n  * `t` - \n\n  * `edit-mode` {`boolean`} - \n\nProperties:\n\n  * `type` {`string`} - \n\n  * `activeRouterManifestIndex` {`string`} - acitvely selected item\n\n  * `routerManifest` - \n\n  * `link` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `label` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `position` {`string`} - \n\n  * `raised` {`boolean`} - \n\n  * `hideLabel` {`boolean`} - \n\n  * `t` - \n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` - ",
      "attributes": [
        {
          "name": "type",
          "description": "`type` {`string`} - \n\nProperty: type"
        },
        {
          "name": "activeRouterManifestIndex",
          "description": "`activeRouterManifestIndex` {`string`} - acitvely selected item\n\nProperty: activeRouterManifestIndex"
        },
        {
          "name": "routerManifest",
          "description": "`routerManifest` - \n\nProperty: routerManifest"
        },
        {
          "name": "link",
          "description": "`link` {`string`} - \n\nProperty: link"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon"
        },
        {
          "name": "position",
          "description": "`position` {`string`} - \n\nProperty: position"
        },
        {
          "name": "raised",
          "description": "`raised` {`boolean`} - \n\nProperty: raised",
          "valueSet": "v"
        },
        {
          "name": "hide-label",
          "description": "`hide-label` {`boolean`} - \n\nProperty: hideLabel\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "site-menu-content",
      "description": "Attributes:\n\n  * `edit-mode` {`boolean`} - \n\n  * `relationship` {`string`} - \n\n  * `items` {`any[]`} - \n\n  * `is-empty` {`boolean`} - \n\n  * `hide-if-empty` {`boolean`} - \n\n  * `position` {`string`} - \n\n  * `contentContainer` - \n\n  * `mobile` {`boolean`} - \n\n  * `hideSettings` {`boolean`} - \n\n  * `label` {`string`} - \n\nProperties:\n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` - \n\n  * `relationship` {`string`} - \n\n  * `fallbackText` - \n\n  * `items` {`any[]`} - \n\n  * `isEmpty` {`boolean`} - \n\n  * `hideIfEmpty` {`boolean`} - \n\n  * `position` {`string`} - \n\n  * `contentContainer` - \n\n  * `mobile` {`boolean`} - \n\n  * `scrollPolling` {`number`} - \n\n  * `hideSettings` {`boolean`} - \n\n  * `label` {`string`} - \n\n  * `hierarchyTags` {`string[]`} - ",
      "attributes": [
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        },
        {
          "name": "relationship",
          "description": "`relationship` {`string`} - \n\nProperty: relationship\n\nDefault: null"
        },
        {
          "name": "items",
          "description": "`items` {`any[]`} - \n\nProperty: items\n\nDefault: "
        },
        {
          "name": "is-empty",
          "description": "`is-empty` {`boolean`} - \n\nProperty: isEmpty\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "hide-if-empty",
          "description": "`hide-if-empty` {`boolean`} - \n\nProperty: hideIfEmpty\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "position",
          "description": "`position` {`string`} - \n\nProperty: position\n\nDefault: left"
        },
        {
          "name": "contentContainer",
          "description": "`contentContainer` - \n\nProperty: contentContainer\n\nDefault: null"
        },
        {
          "name": "mobile",
          "description": "`mobile` {`boolean`} - \n\nProperty: mobile\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hideSettings",
          "description": "`hideSettings` {`boolean`} - \n\nProperty: hideSettings\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label\n\nDefault: Contents"
        }
      ]
    },
    {
      "name": "site-menu",
      "description": "`site-menu`\n`Menu hierarchy`\n\nAttributes:\n\n  * `routerManifest` - Manifest with router / location enhancements\n\n  * `active-id` {`string`} - acitvely selected item\n\n  * `hide-active-indicator` {`boolean`} - Binding for active indicator and auto scrolling\n\n  * `prevent-auto-scroll` {`boolean`} - prevent the automatic scrolling when items become active\n\n  * `track-icon` {`string`} - allow for visualizing the tracking of page requests\n\n  * `edit-mode` {`boolean`} - \n\nProperties:\n\n  * `routerManifest` - Manifest with router / location enhancements\n\n  * `activeId` {`string`} - acitvely selected item\n\n  * `hideActiveIndicator` {`boolean`} - Binding for active indicator and auto scrolling\n\n  * `preventAutoScroll` {`boolean`} - prevent the automatic scrolling when items become active\n\n  * `trackIcon` {`string`} - allow for visualizing the tracking of page requests\n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` {`never[]`} - ",
      "attributes": [
        {
          "name": "routerManifest",
          "description": "`routerManifest` - Manifest with router / location enhancements\n\nProperty: routerManifest"
        },
        {
          "name": "active-id",
          "description": "`active-id` {`string`} - acitvely selected item\n\nProperty: activeId"
        },
        {
          "name": "hide-active-indicator",
          "description": "`hide-active-indicator` {`boolean`} - Binding for active indicator and auto scrolling\n\nProperty: hideActiveIndicator\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "prevent-auto-scroll",
          "description": "`prevent-auto-scroll` {`boolean`} - prevent the automatic scrolling when items become active\n\nProperty: preventAutoScroll\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "track-icon",
          "description": "`track-icon` {`string`} - allow for visualizing the tracking of page requests\n\nProperty: trackIcon\n\nDefault: "
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "site-top-menu",
      "description": "`site-top-menu`\n`Menu on top of the site typically a bar of options`\n\nAttributes:\n\n  * `manifest` - manifest of everything, in case we need to check on children of parents\n\n  * `active-id` {`string`} - acitvely selected item\n\n  * `sticky` {`boolean`} - visually stick to top of interface at all times\n\n  * `indicator` {`string`} - visualize the indicator as a a line, arrow, or not at all\n\n  * `noink` {`boolean`} - ink on the buttons\n\n  * `notitle` {`boolean`} - hide title on the buttons\n\n  * `showindex` {`boolean`} - ink on the buttons\n\n  * `arrow-size` {`number`} - Stupid but faster then calculating on the fly for sure\n\n  * `sort` - Allow customization of sort\n\n  * `conditions` - Allow customization of the conditions if needed\n\n  * `mobile-title` {`string`} - \n\n  * `edit-mode` {`boolean`} - \n\nProperties:\n\n  * `manifest` - manifest of everything, in case we need to check on children of parents\n\n  * `activeId` {`string`} - acitvely selected item\n\n  * `sticky` {`boolean`} - visually stick to top of interface at all times\n\n  * `indicator` {`string`} - visualize the indicator as a a line, arrow, or not at all\n\n  * `noink` {`boolean`} - ink on the buttons\n\n  * `notitle` {`boolean`} - hide title on the buttons\n\n  * `showindex` {`boolean`} - ink on the buttons\n\n  * `arrowSize` {`number`} - Stupid but faster then calculating on the fly for sure\n\n  * `sort` - Allow customization of sort\n\n  * `conditions` - Allow customization of the conditions if needed\n\n  * `mobileTitle` {`string`} - \n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` {`never[]`} - \n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `_overrideLegacyUndefined` {`boolean`} - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "manifest",
          "description": "`manifest` - manifest of everything, in case we need to check on children of parents\n\nProperty: manifest"
        },
        {
          "name": "active-id",
          "description": "`active-id` {`string`} - acitvely selected item\n\nProperty: activeId"
        },
        {
          "name": "sticky",
          "description": "`sticky` {`boolean`} - visually stick to top of interface at all times\n\nProperty: sticky\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "indicator",
          "description": "`indicator` {`string`} - visualize the indicator as a a line, arrow, or not at all\n\nProperty: indicator\n\nDefault: line"
        },
        {
          "name": "noink",
          "description": "`noink` {`boolean`} - ink on the buttons\n\nProperty: noink\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "notitle",
          "description": "`notitle` {`boolean`} - hide title on the buttons\n\nProperty: notitle\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "showindex",
          "description": "`showindex` {`boolean`} - ink on the buttons\n\nProperty: showindex\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "arrow-size",
          "description": "`arrow-size` {`number`} - Stupid but faster then calculating on the fly for sure\n\nProperty: arrowSize\n\nDefault: 6"
        },
        {
          "name": "sort",
          "description": "`sort` - Allow customization of sort\n\nProperty: sort\n\nDefault: [object Object]"
        },
        {
          "name": "conditions",
          "description": "`conditions` - Allow customization of the conditions if needed\n\nProperty: conditions\n\nDefault: [object Object]"
        },
        {
          "name": "mobile-title",
          "description": "`mobile-title` {`string`} - \n\nProperty: mobileTitle\n\nDefault: Navigation"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "site-query-menu-slice",
      "description": "`site-query-menu-slice`\n`A slice / 1 level within the hierarchy, via relative parent or deep parent`\n\nEvents:\n\n  * `result-changed` {`CustomEvent<any[]>`} - \n\nAttributes:\n\n  * `parent` {`string`} - parent for the menu id\n\n  * `result` {`any[]`} - Results which can be binded to something else\n\n  * `_routerManifest` - \n\n  * `start` {`number`} - starting level for the menu items\n\n  * `end` {`number`} - ending level for the menu items\n\n  * `dynamic-methodology` {`string`} - How we should obtain the parent who's children we should show\noptions are active, parent, or ancestor\n\n  * `fixed-id` {`boolean`} - Use this boolean to force this to fix to 1 parent\nOtherwise it will dynamically update (default behavior)\n\n  * `no-dynamic-level` {`boolean`} - Allow disabling the dynamic leveling\n\nProperties:\n\n  * `parent` {`string`} - parent for the menu id\n\n  * `result` {`any[]`} - Results which can be binded to something else\n\n  * `_routerManifest` - \n\n  * `__disposer` {`never[]`} - \n\n  * `start` {`number`} - starting level for the menu items\n\n  * `end` {`number`} - ending level for the menu items\n\n  * `dynamicMethodology` {`string`} - How we should obtain the parent who's children we should show\noptions are active, parent, or ancestor\n\n  * `fixedId` {`boolean`} - Use this boolean to force this to fix to 1 parent\nOtherwise it will dynamically update (default behavior)\n\n  * `noDynamicLevel` {`boolean`} - Allow disabling the dynamic leveling",
      "attributes": [
        {
          "name": "parent",
          "description": "`parent` {`string`} - parent for the menu id\n\nProperty: parent"
        },
        {
          "name": "result",
          "description": "`result` {`any[]`} - Results which can be binded to something else\n\nProperty: result"
        },
        {
          "name": "_routerManifest",
          "description": "`_routerManifest` - \n\nProperty: _routerManifest"
        },
        {
          "name": "start",
          "description": "`start` {`number`} - starting level for the menu items\n\nProperty: start\n\nDefault: 1"
        },
        {
          "name": "end",
          "description": "`end` {`number`} - ending level for the menu items\n\nProperty: end\n\nDefault: 1000"
        },
        {
          "name": "dynamic-methodology",
          "description": "`dynamic-methodology` {`string`} - How we should obtain the parent who's children we should show\noptions are active, parent, or ancestor\n\nProperty: dynamicMethodology\n\nDefault: active"
        },
        {
          "name": "fixed-id",
          "description": "`fixed-id` {`boolean`} - Use this boolean to force this to fix to 1 parent\nOtherwise it will dynamically update (default behavior)\n\nProperty: fixedId\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "no-dynamic-level",
          "description": "`no-dynamic-level` {`boolean`} - Allow disabling the dynamic leveling\n\nProperty: noDynamicLevel\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onresult-changed",
          "description": "`result-changed` {`CustomEvent<any[]>`} - "
        }
      ]
    },
    {
      "name": "site-query",
      "description": "Attributes:\n\n  * `routerManifest` - Manifest with router / location enhancements\n\n  * `active-id` {`string`} - activeId\n\n  * `result` {`any[]`} - result to help illustrate this only lives here\n\n  * `entity` {`string`} - Entity to focus on\n\n  * `conditions` - Conditions that can be used to slice the data differently in the manifest\n\n  * `random` {`boolean`} - Randomize results\n\n  * `sort` - Establish the order items should be displayed in\n\n  * `force-rebuild` {`boolean`} - Boolean flag to force a repaint of what's in the item\n\n  * `limit` {`number`} - Limit the number of results returned\n\n  * `start-index` {`number`} - Where to start returning results from\n\nProperties:\n\n  * `routerManifest` - Manifest with router / location enhancements\n\n  * `activeId` {`string`} - activeId\n\n  * `result` {`any[]`} - result to help illustrate this only lives here\n\n  * `entity` {`string`} - Entity to focus on\n\n  * `conditions` - Conditions that can be used to slice the data differently in the manifest\n\n  * `random` {`boolean`} - Randomize results\n\n  * `sort` - Establish the order items should be displayed in\n\n  * `forceRebuild` {`boolean`} - Boolean flag to force a repaint of what's in the item\n\n  * `limit` {`number`} - Limit the number of results returned\n\n  * `startIndex` {`number`} - Where to start returning results from",
      "attributes": [
        {
          "name": "routerManifest",
          "description": "`routerManifest` - Manifest with router / location enhancements\n\nProperty: routerManifest"
        },
        {
          "name": "active-id",
          "description": "`active-id` {`string`} - activeId\n\nProperty: activeId"
        },
        {
          "name": "result",
          "description": "`result` {`any[]`} - result to help illustrate this only lives here\n\nProperty: result"
        },
        {
          "name": "entity",
          "description": "`entity` {`string`} - Entity to focus on\n\nProperty: entity\n\nDefault: node"
        },
        {
          "name": "conditions",
          "description": "`conditions` - Conditions that can be used to slice the data differently in the manifest\n\nProperty: conditions\n\nDefault: [object Object]"
        },
        {
          "name": "random",
          "description": "`random` {`boolean`} - Randomize results\n\nProperty: random\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "sort",
          "description": "`sort` - Establish the order items should be displayed in\n\nProperty: sort\n\nDefault: [object Object]"
        },
        {
          "name": "force-rebuild",
          "description": "`force-rebuild` {`boolean`} - Boolean flag to force a repaint of what's in the item\n\nProperty: forceRebuild\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "limit",
          "description": "`limit` {`number`} - Limit the number of results returned\n\nProperty: limit\n\nDefault: 0"
        },
        {
          "name": "start-index",
          "description": "`start-index` {`number`} - Where to start returning results from\n\nProperty: startIndex\n\nDefault: 0"
        }
      ]
    },
    {
      "name": "site-render-query",
      "description": "`site-render-query`\n`Render a query result as an iron-list`\n\nEvents:\n\n  * `result-changed` {`CustomEvent<{ value: any; }>`} - \n\nAttributes:\n\n  * `conditions` - Conditions that can be used to slice the data differently in the manifest\n\n  * `sort` - Establish the order items should be displayed in\n\n  * `grid` {`boolean`} - iron-list helper for this 1 flag\n\n  * `result` {`any[]`} - \n\n  * `__items` {`any[]`} - \n\nProperties:\n\n  * `conditions` - Conditions that can be used to slice the data differently in the manifest\n\n  * `sort` - Establish the order items should be displayed in\n\n  * `grid` {`boolean`} - iron-list helper for this 1 flag\n\n  * `result` {`any[]`} - \n\n  * `__items` {`any[]`} - ",
      "attributes": [
        {
          "name": "conditions",
          "description": "`conditions` - Conditions that can be used to slice the data differently in the manifest\n\nProperty: conditions\n\nDefault: [object Object]"
        },
        {
          "name": "sort",
          "description": "`sort` - Establish the order items should be displayed in\n\nProperty: sort\n\nDefault: [object Object]"
        },
        {
          "name": "grid",
          "description": "`grid` {`boolean`} - iron-list helper for this 1 flag\n\nProperty: grid\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "result",
          "description": "`result` {`any[]`} - \n\nProperty: result\n\nDefault: "
        },
        {
          "name": "__items",
          "description": "`__items` {`any[]`} - \n\nProperty: __items\n\nDefault: "
        },
        {
          "name": "onresult-changed",
          "description": "`result-changed` {`CustomEvent<{ value: any; }>`} - "
        }
      ]
    },
    {
      "name": "site-print-button",
      "description": "`site-print-button`\n`Dynamic print button to request and generate what to print`\n\nAttributes:\n\n  * `disabled` {`boolean`} - \n\n  * `label` {`string`} - label for the button\n\n  * `icon` {`string`} - icon\n\n  * `position` {`string`} - label for the button\n\n  * `type` {`string`} - How much do you want to print right now\n\n  * `t` - \n\n  * `edit-mode` {`boolean`} - \n\nProperties:\n\n  * `disabled` {`boolean`} - \n\n  * `label` {`string`} - label for the button\n\n  * `icon` {`string`} - icon\n\n  * `position` {`string`} - label for the button\n\n  * `type` {`string`} - How much do you want to print right now\n\n  * `t` - \n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` - ",
      "attributes": [
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - label for the button\n\nProperty: label"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - icon\n\nProperty: icon\n\nDefault: icons:print"
        },
        {
          "name": "position",
          "description": "`position` {`string`} - label for the button\n\nProperty: position\n\nDefault: bottom"
        },
        {
          "name": "type",
          "description": "`type` {`string`} - How much do you want to print right now\n\nProperty: type\n\nDefault: page"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "site-rss-button",
      "description": "`site-rss-button`\n`A button that references RSS feeds in a standards based way`\n\nAttributes:\n\n  * `disabled` {`boolean`} - \n\n  * `href` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `_link` - \n\n  * `type` {`string`} - \n\n  * `position` {`string`} - \n\n  * `t` - \n\n  * `edit-mode` {`boolean`} - \n\nProperties:\n\n  * `disabled` {`boolean`} - \n\n  * `href` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `_link` - \n\n  * `type` {`string`} - \n\n  * `raised` {`boolean`} - \n\n  * `position` {`string`} - \n\n  * `t` - \n\n  * `editMode` {`boolean`} - \n\n  * `__disposer` - ",
      "attributes": [
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled",
          "valueSet": "v"
        },
        {
          "name": "href",
          "description": "`href` {`string`} - \n\nProperty: href"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon"
        },
        {
          "name": "_link",
          "description": "`_link` - \n\nProperty: _link\n\nDefault: [object Object]"
        },
        {
          "name": "type",
          "description": "`type` {`string`} - \n\nProperty: type\n\nDefault: rss"
        },
        {
          "name": "position",
          "description": "`position` {`string`} - \n\nProperty: position\n\nDefault: bottom"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "site-search",
      "description": "`site-search`\n`Searching HAXcms content using the auto-generated lunr search configuration`\n\nEvents:\n\n  * `search-item-selected` {`CustomEvent<{ value: any; }>`} - \n\n  * `simple-modal-hide` {`CustomEvent<{}>`} - \n\nAttributes:\n\n  * `data-source` {`string`} - \n\n  * `whileLoading` {`boolean`} - \n\n  * `hide-input` {`boolean`} - \n\n  * `search` {`string`} - \n\n  * `show-path` {`boolean`} - \n\n  * `show-date` {`boolean`} - \n\n  * `__results` {`any[]`} - \n\n  * `t` - \n\nProperties:\n\n  * `dataSource` {`string`} - \n\n  * `whileLoading` {`boolean`} - \n\n  * `hideInput` {`boolean`} - \n\n  * `search` {`string`} - \n\n  * `showPath` {`boolean`} - \n\n  * `showDate` {`boolean`} - \n\n  * `__results` {`any[]`} - \n\n  * `t` - ",
      "attributes": [
        {
          "name": "data-source",
          "description": "`data-source` {`string`} - \n\nProperty: dataSource"
        },
        {
          "name": "whileLoading",
          "description": "`whileLoading` {`boolean`} - \n\nProperty: whileLoading\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-input",
          "description": "`hide-input` {`boolean`} - \n\nProperty: hideInput\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "search",
          "description": "`search` {`string`} - \n\nProperty: search\n\nDefault: "
        },
        {
          "name": "show-path",
          "description": "`show-path` {`boolean`} - \n\nProperty: showPath\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "show-date",
          "description": "`show-date` {`boolean`} - \n\nProperty: showDate\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "__results",
          "description": "`__results` {`any[]`} - \n\nProperty: __results\n\nDefault: "
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "onsearch-item-selected",
          "description": "`search-item-selected` {`CustomEvent<{ value: any; }>`} - "
        },
        {
          "name": "onsimple-modal-hide",
          "description": "`simple-modal-hide` {`CustomEvent<{}>`} - "
        }
      ]
    },
    {
      "name": "site-title",
      "description": "`site-title`\n`Title of the site`\n\nAttributes:\n\n  * `disabled` {`boolean`} - \n\n  * `site-title` {`string`} - Site title\n\n  * `home-link` {`string`} - HREF to the home page\n\n  * `icon` {`string`} - optional icon\n\n  * `notitle` {`boolean`} - If the title should be displayed or not\n\n  * `t` - \n\nProperties:\n\n  * `disabled` {`boolean`} - \n\n  * `siteTitle` {`string`} - Site title\n\n  * `homeLink` {`string`} - HREF to the home page\n\n  * `icon` {`string`} - optional icon\n\n  * `__disposer` {`never[]`} - \n\n  * `notitle` {`boolean`} - If the title should be displayed or not\n\n  * `t` - ",
      "attributes": [
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled",
          "valueSet": "v"
        },
        {
          "name": "site-title",
          "description": "`site-title` {`string`} - Site title\n\nProperty: siteTitle"
        },
        {
          "name": "home-link",
          "description": "`home-link` {`string`} - HREF to the home page\n\nProperty: homeLink"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - optional icon\n\nProperty: icon"
        },
        {
          "name": "notitle",
          "description": "`notitle` {`boolean`} - If the title should be displayed or not\n\nProperty: notitle\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        }
      ]
    },
    {
      "name": "basic-template",
      "attributes": []
    },
    {
      "name": "minimalist-template",
      "attributes": []
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}
