!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("@polymer/polymer/polymer-element.js"),require("@polymer/polymer/lib/legacy/class.js"),require("@polymer/polymer/lib/utils/wrap.js"),require("@polymer/polymer/lib/utils/async.js")):"function"==typeof define&&define.amd?define(["@polymer/polymer/polymer-element.js","@polymer/polymer/lib/legacy/class.js","@polymer/polymer/lib/utils/wrap.js","@polymer/polymer/lib/utils/async.js"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).polymerElement_js,e.class_js,e.wrap_js)}(this,(function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function i(e,t,r){return t&&a(e.prototype,t),r&&a(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&l(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}function l(e,t){return l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},l(e,t)}function u(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function c(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=s(e);if(t){var a=s(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return u(this,r)}}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=h(e,t);if(n){var a=Object.getOwnPropertyDescriptor(n,t);return a.get?a.get.call(arguments.length<3?e:r):a.value}},d.apply(this,arguments)}function p(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var b,m;window.MaterialProgressBehaviorImpl=b={properties:{barHeight:{type:Number,value:22,observer:"_refresh"},animated:{type:Boolean,value:!1,reflectToAttribute:!0},legendLabel:{type:String,value:"",observer:"_refresh"},bars:{type:Array,value:function(){return[]},notify:!0,readOnly:!0},sum:{type:Number,value:0,notify:!0,readOnly:!0,reflectToAttribute:!0},_legendItems:{type:Array,value:function(){return[]},readOnly:!0},_legendNeeded:{type:Boolean,value:!1,compute:"_computeLegendNeeded(_legendItems)",readOnly:!0}},listeners:{"dom-mutation":"refresh"},refresh:function(){if(this._attached){this._computeSumAndBars();var e,t,r,n,a=!1,i=600/(this.bars.length-1);if(this.splice("_legendItems",0,this._legendItems.length),this.legendLabel&&this.push("_legendItems",{label:this.legendLabel}),this.bars)for(e=this.bars.length-1,t=this._barWithValueCount-1;e>=0;e--)r=this.bars[e],n=this._getBarMeta(r),this.toggleClass("visible",n.value>0,r),this.toggleClass("last",n.value>0&&!a,r),r.style.width=this.bars.length>0?this._getWidthForBar(n.value,this.sum,this._maxBarValue,this.barHeight):"0px",r.style.zIndex=this.bars.length-e,n.value>0&&(a=!0,this._initialized||this._playFirstAnimation(r,t,i),t--),n.legend&&(n.value>0||n.legendAlwaysVisible)&&this.splice("_legendItems",1,0,{label:n.legend,color:window.getComputedStyle(r).backgroundColor});this._oldBarHeight&&this._oldBarHeight===this.barHeight||(this.customStyle["--material-progress-bar-height"]=this.barHeight+"px",this.updateStyles(),this._oldBarHeight=this.barHeight),this._initialized=a}},ready:function(){d(s(b),"ready",this).call(this),this._mutationOptions={childList:!0,subtree:!0,attributes:!0,characterData:!1,attributeFilter:["data-value","data-legend","data-legend-always-visible"]},this._mutationFilter=function(e){return this._mutationIsChildList(e,this.shadowRoot.querySelector("#barsContainer"))||this._mutationIsChildAttributes(e,this.shadowRoot.querySelector("#barsContainer"))}},connectedCallback:function(){d(s(b),"connectedCallback",this).call(this),this._attached=!0,this._refresh()},_refresh:function(){this.debounce("refresh",this.refresh,10)},getDistributedNodes:function(e){return"slot"===e.localName?r.wrap(e).assignedNodes({flatten:!0}):[]},_computeSumAndBars:function(){var e=0,t=0,r=0,n=0,a=[],i=this.getDistributedNodes(this.shadowRoot.querySelector("#content"));return i&&i.forEach((function(i){i.classList&&i.classList.contains("bar")&&i.hasAttribute("data-value")&&(a.push(i),t=this._getBarMeta(i).value,e+=t,r+=t>0?1:0,n=Math.max(n,t))}),this),this._setBars(a),this._setSum(e),this._maxBarValue=n,this._barWithValueCount=r,e},_getBarMeta:function(e){var t,r={value:0,legend:void 0};return e&&e.getAttribute&&(t=Number(e.getAttribute("data-value")),r.value=isNaN(t)?0:Math.max(0,t),r.legend=e.getAttribute("data-legend"),r.legendAlwaysVisible=e.hasAttribute("data-legend-always-visible")),r},_getWidthForBar:function(e,t,r,n){return"0px"},_playFirstAnimation:function(e,t,r){this.toggleClass("entry",!0,e)},_computeLegendNeeded:function(e){return e&&e.length>0}},window.MaterialProgressBehavior=[window.MaterialProgressBehaviorImpl];var f,g=function(t){o(a,t);var r=c(a);function a(){return n(this,a),r.apply(this,arguments)}return i(a,[{key:"_getWidthForBar",value:function(e,t,r,n){var a=Math.max(t,this.max);return"calc("+((a>0?Math.floor(e/a*1e4)/100:"0")+"%")+" + "+n/2+"px)"}}],[{key:"template",get:function(){return e.html(m||(m=p(['\n      <style>\n        #barsContainer {\n          overflow: hidden;\n          background-color: var(\n            --material-progress-bars-background-color,\n            #e0e0e0\n          );\n          border-radius: calc(var(--material-progress-bar-height) / 2);\n          min-width: var(--material-progress-bar-height);\n          height: var(--material-progress-bar-height);\n          @apply --layout;\n          @apply --material-progress-bars-style;\n        }\n        :host > #barsContainer > ::content > .bar {\n          margin-left: calc(-var(--material-progress-bar-height) / 2);\n          border-radius: 0 calc(var(--material-progress-bar-height) / 2)\n            calc(var(--material-progress-bar-height) / 2) 0;\n        }\n        :host([animated]) > #barsContainer > ::content > .entry {\n          -webkit-transition: width 850ms cubic-bezier(0.4, 0, 0.2, 1);\n          -ms-transition: width 850ms cubic-bezier(0.4, 0, 0.2, 1);\n          -moz-transition: width 850ms cubic-bezier(0.4, 0, 0.2, 1);\n          -o-transition: width 850ms cubic-bezier(0.4, 0, 0.2, 1);\n          transition: width 850ms cubic-bezier(0.4, 0, 0.2, 1);\n        }\n        :host > #barsContainer > ::content > * > span {\n          margin: 0 calc(var(--material-progress-bar-height) * 1 / 3) 0\n            calc(var(--material-progress-bar-height) * 5 / 6);\n        }\n      </style>\n      <div id="barsContainer">\n        <slot id="content" name=".bar[data-value]"></slot>\n      </div>\n      <div class="legend" hidden$="[[_legendNeeded]]">\n        <template is="dom-repeat" items="[[_legendItems]]" as="l">\n          <span style$="color: [[l.color]];">[[l.label]]</span>\n        </template>\n      </div>\n    '])))}},{key:"tag",get:function(){return"material-progress-bars"}},{key:"properties",get:function(){return{max:{type:Number,value:100,observer:"_refresh"}}}}]),a}(t.mixinBehaviors([MaterialProgressBehaviorImpl],e.PolymerElement));window.customElements.define(g.tag,g);var y=function(t){o(a,t);var r=c(a);function a(){return n(this,a),r.apply(this,arguments)}return i(a,[{key:"_getWidthForBar",value:function(e,t,r,n){var a=this.scaleToSum?t:r;return(a>0?Math.floor(e/a*1e4)/100:"0")+"%"}}],[{key:"template",get:function(){return e.html(f||(f=p(['\n      <style>\n        #barsContainer {\n          @apply --layout-vertical;\n          @apply --material-progress-histo-style;\n        }\n        :host > #barsContainer > ::content > * {\n          height: 0px;\n        }\n        :host > #barsContainer > ::content > .bar {\n          border-radius: calc(var(--material-progress-bar-height) / 2);\n        }\n        :host > #barsContainer > ::content > .bar.visible:not(.last) {\n          margin-bottom: 12px;\n        }\n        :host > #barsContainer > ::content > .bar.visible {\n          min-width: var(--material-progress-bar-height);\n        }\n        :host > #barsContainer > ::content > .bar:not(.visible) > * {\n          visibility: hidden;\n        }\n        :host > #barsContainer > ::content > * > span {\n          margin: 0 calc(var(--material-progress-bar-height) * 1 / 3);\n        }\n      </style>\n      <div id="barsContainer">\n        <slot id="content" name=".bar[data-value]">\n          <span>test</span>\n        </slot>\n      </div>\n      <div class="legend" hidden$="[[_legendNeeded]]">\n        <template is="dom-repeat" items="[[_legendItems]]" as="l">\n          <span style$="color: [[l.color]];">[[l.label]]</span>\n        </template>\n      </div>\n    '])))}},{key:"tag",get:function(){return"material-progress-histo"}},{key:"properties",get:function(){return{scaleToSum:{type:Boolean,value:!1,observer:"_refresh"}}}}]),a}(t.mixinBehaviors([MaterialProgressBehaviorImpl],e.PolymerElement));window.customElements.define(y.tag,y)}));
